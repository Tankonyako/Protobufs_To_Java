package in.dragonbra.javasteam.protobufs.csgo;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csgo/cs_usercmd.proto

public final class CsUsercmd {
  private CsUsercmd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CSGOInterpolationInfoPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSGOInterpolationInfoPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 src_tick = 1 [default = -1];</code>
     * @return Whether the srcTick field is set.
     */
    boolean hasSrcTick();
    /**
     * <code>optional int32 src_tick = 1 [default = -1];</code>
     * @return The srcTick.
     */
    int getSrcTick();

    /**
     * <code>optional int32 dst_tick = 2 [default = -1];</code>
     * @return Whether the dstTick field is set.
     */
    boolean hasDstTick();
    /**
     * <code>optional int32 dst_tick = 2 [default = -1];</code>
     * @return The dstTick.
     */
    int getDstTick();

    /**
     * <code>optional float frac = 3 [default = 0];</code>
     * @return Whether the frac field is set.
     */
    boolean hasFrac();
    /**
     * <code>optional float frac = 3 [default = 0];</code>
     * @return The frac.
     */
    float getFrac();
  }
  /**
   * Protobuf type {@code CSGOInterpolationInfoPB}
   */
  public static final class CSGOInterpolationInfoPB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSGOInterpolationInfoPB)
      CSGOInterpolationInfoPBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSGOInterpolationInfoPB.newBuilder() to construct.
    private CSGOInterpolationInfoPB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSGOInterpolationInfoPB() {
      srcTick_ = -1;
      dstTick_ = -1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CSGOInterpolationInfoPB();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSGOInterpolationInfoPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              srcTick_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dstTick_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              frac_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CsUsercmd.internal_static_CSGOInterpolationInfoPB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CsUsercmd.internal_static_CSGOInterpolationInfoPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CsUsercmd.CSGOInterpolationInfoPB.class, CsUsercmd.CSGOInterpolationInfoPB.Builder.class);
    }

    private int bitField0_;
    public static final int SRC_TICK_FIELD_NUMBER = 1;
    private int srcTick_;
    /**
     * <code>optional int32 src_tick = 1 [default = -1];</code>
     * @return Whether the srcTick field is set.
     */
    @java.lang.Override
    public boolean hasSrcTick() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 src_tick = 1 [default = -1];</code>
     * @return The srcTick.
     */
    @java.lang.Override
    public int getSrcTick() {
      return srcTick_;
    }

    public static final int DST_TICK_FIELD_NUMBER = 2;
    private int dstTick_;
    /**
     * <code>optional int32 dst_tick = 2 [default = -1];</code>
     * @return Whether the dstTick field is set.
     */
    @java.lang.Override
    public boolean hasDstTick() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 dst_tick = 2 [default = -1];</code>
     * @return The dstTick.
     */
    @java.lang.Override
    public int getDstTick() {
      return dstTick_;
    }

    public static final int FRAC_FIELD_NUMBER = 3;
    private float frac_;
    /**
     * <code>optional float frac = 3 [default = 0];</code>
     * @return Whether the frac field is set.
     */
    @java.lang.Override
    public boolean hasFrac() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float frac = 3 [default = 0];</code>
     * @return The frac.
     */
    @java.lang.Override
    public float getFrac() {
      return frac_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, srcTick_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, dstTick_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(3, frac_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, srcTick_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dstTick_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, frac_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CsUsercmd.CSGOInterpolationInfoPB)) {
        return super.equals(obj);
      }
      CsUsercmd.CSGOInterpolationInfoPB other = (CsUsercmd.CSGOInterpolationInfoPB) obj;

      if (hasSrcTick() != other.hasSrcTick()) return false;
      if (hasSrcTick()) {
        if (getSrcTick()
            != other.getSrcTick()) return false;
      }
      if (hasDstTick() != other.hasDstTick()) return false;
      if (hasDstTick()) {
        if (getDstTick()
            != other.getDstTick()) return false;
      }
      if (hasFrac() != other.hasFrac()) return false;
      if (hasFrac()) {
        if (java.lang.Float.floatToIntBits(getFrac())
            != java.lang.Float.floatToIntBits(
                other.getFrac())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSrcTick()) {
        hash = (37 * hash) + SRC_TICK_FIELD_NUMBER;
        hash = (53 * hash) + getSrcTick();
      }
      if (hasDstTick()) {
        hash = (37 * hash) + DST_TICK_FIELD_NUMBER;
        hash = (53 * hash) + getDstTick();
      }
      if (hasFrac()) {
        hash = (37 * hash) + FRAC_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFrac());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOInterpolationInfoPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CsUsercmd.CSGOInterpolationInfoPB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSGOInterpolationInfoPB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSGOInterpolationInfoPB)
        CsUsercmd.CSGOInterpolationInfoPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CsUsercmd.internal_static_CSGOInterpolationInfoPB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CsUsercmd.internal_static_CSGOInterpolationInfoPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CsUsercmd.CSGOInterpolationInfoPB.class, CsUsercmd.CSGOInterpolationInfoPB.Builder.class);
      }

      // Construct using CsUsercmd.CSGOInterpolationInfoPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        srcTick_ = -1;
        bitField0_ = (bitField0_ & ~0x00000001);
        dstTick_ = -1;
        bitField0_ = (bitField0_ & ~0x00000002);
        frac_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CsUsercmd.internal_static_CSGOInterpolationInfoPB_descriptor;
      }

      @java.lang.Override
      public CsUsercmd.CSGOInterpolationInfoPB getDefaultInstanceForType() {
        return CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance();
      }

      @java.lang.Override
      public CsUsercmd.CSGOInterpolationInfoPB build() {
        CsUsercmd.CSGOInterpolationInfoPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CsUsercmd.CSGOInterpolationInfoPB buildPartial() {
        CsUsercmd.CSGOInterpolationInfoPB result = new CsUsercmd.CSGOInterpolationInfoPB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.srcTick_ = srcTick_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dstTick_ = dstTick_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.frac_ = frac_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CsUsercmd.CSGOInterpolationInfoPB) {
          return mergeFrom((CsUsercmd.CSGOInterpolationInfoPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CsUsercmd.CSGOInterpolationInfoPB other) {
        if (other == CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance()) return this;
        if (other.hasSrcTick()) {
          setSrcTick(other.getSrcTick());
        }
        if (other.hasDstTick()) {
          setDstTick(other.getDstTick());
        }
        if (other.hasFrac()) {
          setFrac(other.getFrac());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CsUsercmd.CSGOInterpolationInfoPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CsUsercmd.CSGOInterpolationInfoPB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int srcTick_ = -1;
      /**
       * <code>optional int32 src_tick = 1 [default = -1];</code>
       * @return Whether the srcTick field is set.
       */
      @java.lang.Override
      public boolean hasSrcTick() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 src_tick = 1 [default = -1];</code>
       * @return The srcTick.
       */
      @java.lang.Override
      public int getSrcTick() {
        return srcTick_;
      }
      /**
       * <code>optional int32 src_tick = 1 [default = -1];</code>
       * @param value The srcTick to set.
       * @return This builder for chaining.
       */
      public Builder setSrcTick(int value) {
        bitField0_ |= 0x00000001;
        srcTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 src_tick = 1 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearSrcTick() {
        bitField0_ = (bitField0_ & ~0x00000001);
        srcTick_ = -1;
        onChanged();
        return this;
      }

      private int dstTick_ = -1;
      /**
       * <code>optional int32 dst_tick = 2 [default = -1];</code>
       * @return Whether the dstTick field is set.
       */
      @java.lang.Override
      public boolean hasDstTick() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 dst_tick = 2 [default = -1];</code>
       * @return The dstTick.
       */
      @java.lang.Override
      public int getDstTick() {
        return dstTick_;
      }
      /**
       * <code>optional int32 dst_tick = 2 [default = -1];</code>
       * @param value The dstTick to set.
       * @return This builder for chaining.
       */
      public Builder setDstTick(int value) {
        bitField0_ |= 0x00000002;
        dstTick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dst_tick = 2 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearDstTick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dstTick_ = -1;
        onChanged();
        return this;
      }

      private float frac_ ;
      /**
       * <code>optional float frac = 3 [default = 0];</code>
       * @return Whether the frac field is set.
       */
      @java.lang.Override
      public boolean hasFrac() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float frac = 3 [default = 0];</code>
       * @return The frac.
       */
      @java.lang.Override
      public float getFrac() {
        return frac_;
      }
      /**
       * <code>optional float frac = 3 [default = 0];</code>
       * @param value The frac to set.
       * @return This builder for chaining.
       */
      public Builder setFrac(float value) {
        bitField0_ |= 0x00000004;
        frac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float frac = 3 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearFrac() {
        bitField0_ = (bitField0_ & ~0x00000004);
        frac_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSGOInterpolationInfoPB)
    }

    // @@protoc_insertion_point(class_scope:CSGOInterpolationInfoPB)
    private static final CsUsercmd.CSGOInterpolationInfoPB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CsUsercmd.CSGOInterpolationInfoPB();
    }

    public static CsUsercmd.CSGOInterpolationInfoPB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSGOInterpolationInfoPB>
        PARSER = new com.google.protobuf.AbstractParser<CSGOInterpolationInfoPB>() {
      @java.lang.Override
      public CSGOInterpolationInfoPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSGOInterpolationInfoPB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSGOInterpolationInfoPB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSGOInterpolationInfoPB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSGOInputHistoryEntryPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSGOInputHistoryEntryPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgQAngle view_angles = 2;</code>
     * @return Whether the viewAngles field is set.
     */
    boolean hasViewAngles();
    /**
     * <code>optional .CMsgQAngle view_angles = 2;</code>
     * @return The viewAngles.
     */
    Networkbasetypes.CMsgQAngle getViewAngles();
    /**
     * <code>optional .CMsgQAngle view_angles = 2;</code>
     */
    Networkbasetypes.CMsgQAngleOrBuilder getViewAnglesOrBuilder();

    /**
     * <code>optional int32 render_tick_count = 4;</code>
     * @return Whether the renderTickCount field is set.
     */
    boolean hasRenderTickCount();
    /**
     * <code>optional int32 render_tick_count = 4;</code>
     * @return The renderTickCount.
     */
    int getRenderTickCount();

    /**
     * <code>optional float render_tick_fraction = 5;</code>
     * @return Whether the renderTickFraction field is set.
     */
    boolean hasRenderTickFraction();
    /**
     * <code>optional float render_tick_fraction = 5;</code>
     * @return The renderTickFraction.
     */
    float getRenderTickFraction();

    /**
     * <code>optional int32 player_tick_count = 6;</code>
     * @return Whether the playerTickCount field is set.
     */
    boolean hasPlayerTickCount();
    /**
     * <code>optional int32 player_tick_count = 6;</code>
     * @return The playerTickCount.
     */
    int getPlayerTickCount();

    /**
     * <code>optional float player_tick_fraction = 7;</code>
     * @return Whether the playerTickFraction field is set.
     */
    boolean hasPlayerTickFraction();
    /**
     * <code>optional float player_tick_fraction = 7;</code>
     * @return The playerTickFraction.
     */
    float getPlayerTickFraction();

    /**
     * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
     * @return Whether the clInterp field is set.
     */
    boolean hasClInterp();
    /**
     * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
     * @return The clInterp.
     */
    CsUsercmd.CSGOInterpolationInfoPB getClInterp();
    /**
     * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
     */
    CsUsercmd.CSGOInterpolationInfoPBOrBuilder getClInterpOrBuilder();

    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
     * @return Whether the svInterp0 field is set.
     */
    boolean hasSvInterp0();
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
     * @return The svInterp0.
     */
    CsUsercmd.CSGOInterpolationInfoPB getSvInterp0();
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
     */
    CsUsercmd.CSGOInterpolationInfoPBOrBuilder getSvInterp0OrBuilder();

    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
     * @return Whether the svInterp1 field is set.
     */
    boolean hasSvInterp1();
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
     * @return The svInterp1.
     */
    CsUsercmd.CSGOInterpolationInfoPB getSvInterp1();
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
     */
    CsUsercmd.CSGOInterpolationInfoPBOrBuilder getSvInterp1OrBuilder();

    /**
     * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
     * @return Whether the playerInterp field is set.
     */
    boolean hasPlayerInterp();
    /**
     * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
     * @return The playerInterp.
     */
    CsUsercmd.CSGOInterpolationInfoPB getPlayerInterp();
    /**
     * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
     */
    CsUsercmd.CSGOInterpolationInfoPBOrBuilder getPlayerInterpOrBuilder();

    /**
     * <code>optional int32 frame_number = 20;</code>
     * @return Whether the frameNumber field is set.
     */
    boolean hasFrameNumber();
    /**
     * <code>optional int32 frame_number = 20;</code>
     * @return The frameNumber.
     */
    int getFrameNumber();

    /**
     * <code>optional int32 target_ent_index = 8 [default = -1];</code>
     * @return Whether the targetEntIndex field is set.
     */
    boolean hasTargetEntIndex();
    /**
     * <code>optional int32 target_ent_index = 8 [default = -1];</code>
     * @return The targetEntIndex.
     */
    int getTargetEntIndex();

    /**
     * <code>optional .CMsgVector shoot_position = 3;</code>
     * @return Whether the shootPosition field is set.
     */
    boolean hasShootPosition();
    /**
     * <code>optional .CMsgVector shoot_position = 3;</code>
     * @return The shootPosition.
     */
    Networkbasetypes.CMsgVector getShootPosition();
    /**
     * <code>optional .CMsgVector shoot_position = 3;</code>
     */
    Networkbasetypes.CMsgVectorOrBuilder getShootPositionOrBuilder();

    /**
     * <code>optional .CMsgVector target_head_pos_check = 9;</code>
     * @return Whether the targetHeadPosCheck field is set.
     */
    boolean hasTargetHeadPosCheck();
    /**
     * <code>optional .CMsgVector target_head_pos_check = 9;</code>
     * @return The targetHeadPosCheck.
     */
    Networkbasetypes.CMsgVector getTargetHeadPosCheck();
    /**
     * <code>optional .CMsgVector target_head_pos_check = 9;</code>
     */
    Networkbasetypes.CMsgVectorOrBuilder getTargetHeadPosCheckOrBuilder();

    /**
     * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
     * @return Whether the targetAbsPosCheck field is set.
     */
    boolean hasTargetAbsPosCheck();
    /**
     * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
     * @return The targetAbsPosCheck.
     */
    Networkbasetypes.CMsgVector getTargetAbsPosCheck();
    /**
     * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
     */
    Networkbasetypes.CMsgVectorOrBuilder getTargetAbsPosCheckOrBuilder();

    /**
     * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
     * @return Whether the targetAbsAngCheck field is set.
     */
    boolean hasTargetAbsAngCheck();
    /**
     * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
     * @return The targetAbsAngCheck.
     */
    Networkbasetypes.CMsgQAngle getTargetAbsAngCheck();
    /**
     * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
     */
    Networkbasetypes.CMsgQAngleOrBuilder getTargetAbsAngCheckOrBuilder();
  }
  /**
   * Protobuf type {@code CSGOInputHistoryEntryPB}
   */
  public static final class CSGOInputHistoryEntryPB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSGOInputHistoryEntryPB)
      CSGOInputHistoryEntryPBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSGOInputHistoryEntryPB.newBuilder() to construct.
    private CSGOInputHistoryEntryPB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSGOInputHistoryEntryPB() {
      targetEntIndex_ = -1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CSGOInputHistoryEntryPB();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSGOInputHistoryEntryPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              Networkbasetypes.CMsgQAngle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = viewAngles_.toBuilder();
              }
              viewAngles_ = input.readMessage(Networkbasetypes.CMsgQAngle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(viewAngles_);
                viewAngles_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              Networkbasetypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) != 0)) {
                subBuilder = shootPosition_.toBuilder();
              }
              shootPosition_ = input.readMessage(Networkbasetypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shootPosition_);
                shootPosition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              renderTickCount_ = input.readInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000004;
              renderTickFraction_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              playerTickCount_ = input.readInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000010;
              playerTickFraction_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000400;
              targetEntIndex_ = input.readInt32();
              break;
            }
            case 74: {
              Networkbasetypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) != 0)) {
                subBuilder = targetHeadPosCheck_.toBuilder();
              }
              targetHeadPosCheck_ = input.readMessage(Networkbasetypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetHeadPosCheck_);
                targetHeadPosCheck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 82: {
              Networkbasetypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) != 0)) {
                subBuilder = targetAbsPosCheck_.toBuilder();
              }
              targetAbsPosCheck_ = input.readMessage(Networkbasetypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetAbsPosCheck_);
                targetAbsPosCheck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 90: {
              Networkbasetypes.CMsgQAngle.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) != 0)) {
                subBuilder = targetAbsAngCheck_.toBuilder();
              }
              targetAbsAngCheck_ = input.readMessage(Networkbasetypes.CMsgQAngle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetAbsAngCheck_);
                targetAbsAngCheck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 98: {
              CsUsercmd.CSGOInterpolationInfoPB.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) != 0)) {
                subBuilder = clInterp_.toBuilder();
              }
              clInterp_ = input.readMessage(CsUsercmd.CSGOInterpolationInfoPB.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clInterp_);
                clInterp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 106: {
              CsUsercmd.CSGOInterpolationInfoPB.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) != 0)) {
                subBuilder = svInterp0_.toBuilder();
              }
              svInterp0_ = input.readMessage(CsUsercmd.CSGOInterpolationInfoPB.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(svInterp0_);
                svInterp0_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 114: {
              CsUsercmd.CSGOInterpolationInfoPB.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) != 0)) {
                subBuilder = svInterp1_.toBuilder();
              }
              svInterp1_ = input.readMessage(CsUsercmd.CSGOInterpolationInfoPB.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(svInterp1_);
                svInterp1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 122: {
              CsUsercmd.CSGOInterpolationInfoPB.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) != 0)) {
                subBuilder = playerInterp_.toBuilder();
              }
              playerInterp_ = input.readMessage(CsUsercmd.CSGOInterpolationInfoPB.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerInterp_);
                playerInterp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 160: {
              bitField0_ |= 0x00000200;
              frameNumber_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CsUsercmd.internal_static_CSGOInputHistoryEntryPB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CsUsercmd.internal_static_CSGOInputHistoryEntryPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CsUsercmd.CSGOInputHistoryEntryPB.class, CsUsercmd.CSGOInputHistoryEntryPB.Builder.class);
    }

    private int bitField0_;
    public static final int VIEW_ANGLES_FIELD_NUMBER = 2;
    private Networkbasetypes.CMsgQAngle viewAngles_;
    /**
     * <code>optional .CMsgQAngle view_angles = 2;</code>
     * @return Whether the viewAngles field is set.
     */
    @java.lang.Override
    public boolean hasViewAngles() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CMsgQAngle view_angles = 2;</code>
     * @return The viewAngles.
     */
    @java.lang.Override
    public Networkbasetypes.CMsgQAngle getViewAngles() {
      return viewAngles_ == null ? Networkbasetypes.CMsgQAngle.getDefaultInstance() : viewAngles_;
    }
    /**
     * <code>optional .CMsgQAngle view_angles = 2;</code>
     */
    @java.lang.Override
    public Networkbasetypes.CMsgQAngleOrBuilder getViewAnglesOrBuilder() {
      return viewAngles_ == null ? Networkbasetypes.CMsgQAngle.getDefaultInstance() : viewAngles_;
    }

    public static final int RENDER_TICK_COUNT_FIELD_NUMBER = 4;
    private int renderTickCount_;
    /**
     * <code>optional int32 render_tick_count = 4;</code>
     * @return Whether the renderTickCount field is set.
     */
    @java.lang.Override
    public boolean hasRenderTickCount() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 render_tick_count = 4;</code>
     * @return The renderTickCount.
     */
    @java.lang.Override
    public int getRenderTickCount() {
      return renderTickCount_;
    }

    public static final int RENDER_TICK_FRACTION_FIELD_NUMBER = 5;
    private float renderTickFraction_;
    /**
     * <code>optional float render_tick_fraction = 5;</code>
     * @return Whether the renderTickFraction field is set.
     */
    @java.lang.Override
    public boolean hasRenderTickFraction() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional float render_tick_fraction = 5;</code>
     * @return The renderTickFraction.
     */
    @java.lang.Override
    public float getRenderTickFraction() {
      return renderTickFraction_;
    }

    public static final int PLAYER_TICK_COUNT_FIELD_NUMBER = 6;
    private int playerTickCount_;
    /**
     * <code>optional int32 player_tick_count = 6;</code>
     * @return Whether the playerTickCount field is set.
     */
    @java.lang.Override
    public boolean hasPlayerTickCount() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 player_tick_count = 6;</code>
     * @return The playerTickCount.
     */
    @java.lang.Override
    public int getPlayerTickCount() {
      return playerTickCount_;
    }

    public static final int PLAYER_TICK_FRACTION_FIELD_NUMBER = 7;
    private float playerTickFraction_;
    /**
     * <code>optional float player_tick_fraction = 7;</code>
     * @return Whether the playerTickFraction field is set.
     */
    @java.lang.Override
    public boolean hasPlayerTickFraction() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional float player_tick_fraction = 7;</code>
     * @return The playerTickFraction.
     */
    @java.lang.Override
    public float getPlayerTickFraction() {
      return playerTickFraction_;
    }

    public static final int CL_INTERP_FIELD_NUMBER = 12;
    private CsUsercmd.CSGOInterpolationInfoPB clInterp_;
    /**
     * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
     * @return Whether the clInterp field is set.
     */
    @java.lang.Override
    public boolean hasClInterp() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
     * @return The clInterp.
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPB getClInterp() {
      return clInterp_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : clInterp_;
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getClInterpOrBuilder() {
      return clInterp_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : clInterp_;
    }

    public static final int SV_INTERP0_FIELD_NUMBER = 13;
    private CsUsercmd.CSGOInterpolationInfoPB svInterp0_;
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
     * @return Whether the svInterp0 field is set.
     */
    @java.lang.Override
    public boolean hasSvInterp0() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
     * @return The svInterp0.
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPB getSvInterp0() {
      return svInterp0_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp0_;
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getSvInterp0OrBuilder() {
      return svInterp0_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp0_;
    }

    public static final int SV_INTERP1_FIELD_NUMBER = 14;
    private CsUsercmd.CSGOInterpolationInfoPB svInterp1_;
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
     * @return Whether the svInterp1 field is set.
     */
    @java.lang.Override
    public boolean hasSvInterp1() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
     * @return The svInterp1.
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPB getSvInterp1() {
      return svInterp1_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp1_;
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getSvInterp1OrBuilder() {
      return svInterp1_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp1_;
    }

    public static final int PLAYER_INTERP_FIELD_NUMBER = 15;
    private CsUsercmd.CSGOInterpolationInfoPB playerInterp_;
    /**
     * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
     * @return Whether the playerInterp field is set.
     */
    @java.lang.Override
    public boolean hasPlayerInterp() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
     * @return The playerInterp.
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPB getPlayerInterp() {
      return playerInterp_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : playerInterp_;
    }
    /**
     * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
     */
    @java.lang.Override
    public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getPlayerInterpOrBuilder() {
      return playerInterp_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : playerInterp_;
    }

    public static final int FRAME_NUMBER_FIELD_NUMBER = 20;
    private int frameNumber_;
    /**
     * <code>optional int32 frame_number = 20;</code>
     * @return Whether the frameNumber field is set.
     */
    @java.lang.Override
    public boolean hasFrameNumber() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional int32 frame_number = 20;</code>
     * @return The frameNumber.
     */
    @java.lang.Override
    public int getFrameNumber() {
      return frameNumber_;
    }

    public static final int TARGET_ENT_INDEX_FIELD_NUMBER = 8;
    private int targetEntIndex_;
    /**
     * <code>optional int32 target_ent_index = 8 [default = -1];</code>
     * @return Whether the targetEntIndex field is set.
     */
    @java.lang.Override
    public boolean hasTargetEntIndex() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional int32 target_ent_index = 8 [default = -1];</code>
     * @return The targetEntIndex.
     */
    @java.lang.Override
    public int getTargetEntIndex() {
      return targetEntIndex_;
    }

    public static final int SHOOT_POSITION_FIELD_NUMBER = 3;
    private Networkbasetypes.CMsgVector shootPosition_;
    /**
     * <code>optional .CMsgVector shoot_position = 3;</code>
     * @return Whether the shootPosition field is set.
     */
    @java.lang.Override
    public boolean hasShootPosition() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional .CMsgVector shoot_position = 3;</code>
     * @return The shootPosition.
     */
    @java.lang.Override
    public Networkbasetypes.CMsgVector getShootPosition() {
      return shootPosition_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : shootPosition_;
    }
    /**
     * <code>optional .CMsgVector shoot_position = 3;</code>
     */
    @java.lang.Override
    public Networkbasetypes.CMsgVectorOrBuilder getShootPositionOrBuilder() {
      return shootPosition_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : shootPosition_;
    }

    public static final int TARGET_HEAD_POS_CHECK_FIELD_NUMBER = 9;
    private Networkbasetypes.CMsgVector targetHeadPosCheck_;
    /**
     * <code>optional .CMsgVector target_head_pos_check = 9;</code>
     * @return Whether the targetHeadPosCheck field is set.
     */
    @java.lang.Override
    public boolean hasTargetHeadPosCheck() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional .CMsgVector target_head_pos_check = 9;</code>
     * @return The targetHeadPosCheck.
     */
    @java.lang.Override
    public Networkbasetypes.CMsgVector getTargetHeadPosCheck() {
      return targetHeadPosCheck_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : targetHeadPosCheck_;
    }
    /**
     * <code>optional .CMsgVector target_head_pos_check = 9;</code>
     */
    @java.lang.Override
    public Networkbasetypes.CMsgVectorOrBuilder getTargetHeadPosCheckOrBuilder() {
      return targetHeadPosCheck_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : targetHeadPosCheck_;
    }

    public static final int TARGET_ABS_POS_CHECK_FIELD_NUMBER = 10;
    private Networkbasetypes.CMsgVector targetAbsPosCheck_;
    /**
     * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
     * @return Whether the targetAbsPosCheck field is set.
     */
    @java.lang.Override
    public boolean hasTargetAbsPosCheck() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
     * @return The targetAbsPosCheck.
     */
    @java.lang.Override
    public Networkbasetypes.CMsgVector getTargetAbsPosCheck() {
      return targetAbsPosCheck_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : targetAbsPosCheck_;
    }
    /**
     * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
     */
    @java.lang.Override
    public Networkbasetypes.CMsgVectorOrBuilder getTargetAbsPosCheckOrBuilder() {
      return targetAbsPosCheck_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : targetAbsPosCheck_;
    }

    public static final int TARGET_ABS_ANG_CHECK_FIELD_NUMBER = 11;
    private Networkbasetypes.CMsgQAngle targetAbsAngCheck_;
    /**
     * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
     * @return Whether the targetAbsAngCheck field is set.
     */
    @java.lang.Override
    public boolean hasTargetAbsAngCheck() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
     * @return The targetAbsAngCheck.
     */
    @java.lang.Override
    public Networkbasetypes.CMsgQAngle getTargetAbsAngCheck() {
      return targetAbsAngCheck_ == null ? Networkbasetypes.CMsgQAngle.getDefaultInstance() : targetAbsAngCheck_;
    }
    /**
     * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
     */
    @java.lang.Override
    public Networkbasetypes.CMsgQAngleOrBuilder getTargetAbsAngCheckOrBuilder() {
      return targetAbsAngCheck_ == null ? Networkbasetypes.CMsgQAngle.getDefaultInstance() : targetAbsAngCheck_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getViewAngles());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeMessage(3, getShootPosition());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(4, renderTickCount_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFloat(5, renderTickFraction_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(6, playerTickCount_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeFloat(7, playerTickFraction_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(8, targetEntIndex_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeMessage(9, getTargetHeadPosCheck());
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeMessage(10, getTargetAbsPosCheck());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeMessage(11, getTargetAbsAngCheck());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(12, getClInterp());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(13, getSvInterp0());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(14, getSvInterp1());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(15, getPlayerInterp());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(20, frameNumber_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getViewAngles());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getShootPosition());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, renderTickCount_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, renderTickFraction_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, playerTickCount_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, playerTickFraction_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, targetEntIndex_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTargetHeadPosCheck());
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTargetAbsPosCheck());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTargetAbsAngCheck());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getClInterp());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getSvInterp0());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getSvInterp1());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getPlayerInterp());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, frameNumber_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CsUsercmd.CSGOInputHistoryEntryPB)) {
        return super.equals(obj);
      }
      CsUsercmd.CSGOInputHistoryEntryPB other = (CsUsercmd.CSGOInputHistoryEntryPB) obj;

      if (hasViewAngles() != other.hasViewAngles()) return false;
      if (hasViewAngles()) {
        if (!getViewAngles()
            .equals(other.getViewAngles())) return false;
      }
      if (hasRenderTickCount() != other.hasRenderTickCount()) return false;
      if (hasRenderTickCount()) {
        if (getRenderTickCount()
            != other.getRenderTickCount()) return false;
      }
      if (hasRenderTickFraction() != other.hasRenderTickFraction()) return false;
      if (hasRenderTickFraction()) {
        if (java.lang.Float.floatToIntBits(getRenderTickFraction())
            != java.lang.Float.floatToIntBits(
                other.getRenderTickFraction())) return false;
      }
      if (hasPlayerTickCount() != other.hasPlayerTickCount()) return false;
      if (hasPlayerTickCount()) {
        if (getPlayerTickCount()
            != other.getPlayerTickCount()) return false;
      }
      if (hasPlayerTickFraction() != other.hasPlayerTickFraction()) return false;
      if (hasPlayerTickFraction()) {
        if (java.lang.Float.floatToIntBits(getPlayerTickFraction())
            != java.lang.Float.floatToIntBits(
                other.getPlayerTickFraction())) return false;
      }
      if (hasClInterp() != other.hasClInterp()) return false;
      if (hasClInterp()) {
        if (!getClInterp()
            .equals(other.getClInterp())) return false;
      }
      if (hasSvInterp0() != other.hasSvInterp0()) return false;
      if (hasSvInterp0()) {
        if (!getSvInterp0()
            .equals(other.getSvInterp0())) return false;
      }
      if (hasSvInterp1() != other.hasSvInterp1()) return false;
      if (hasSvInterp1()) {
        if (!getSvInterp1()
            .equals(other.getSvInterp1())) return false;
      }
      if (hasPlayerInterp() != other.hasPlayerInterp()) return false;
      if (hasPlayerInterp()) {
        if (!getPlayerInterp()
            .equals(other.getPlayerInterp())) return false;
      }
      if (hasFrameNumber() != other.hasFrameNumber()) return false;
      if (hasFrameNumber()) {
        if (getFrameNumber()
            != other.getFrameNumber()) return false;
      }
      if (hasTargetEntIndex() != other.hasTargetEntIndex()) return false;
      if (hasTargetEntIndex()) {
        if (getTargetEntIndex()
            != other.getTargetEntIndex()) return false;
      }
      if (hasShootPosition() != other.hasShootPosition()) return false;
      if (hasShootPosition()) {
        if (!getShootPosition()
            .equals(other.getShootPosition())) return false;
      }
      if (hasTargetHeadPosCheck() != other.hasTargetHeadPosCheck()) return false;
      if (hasTargetHeadPosCheck()) {
        if (!getTargetHeadPosCheck()
            .equals(other.getTargetHeadPosCheck())) return false;
      }
      if (hasTargetAbsPosCheck() != other.hasTargetAbsPosCheck()) return false;
      if (hasTargetAbsPosCheck()) {
        if (!getTargetAbsPosCheck()
            .equals(other.getTargetAbsPosCheck())) return false;
      }
      if (hasTargetAbsAngCheck() != other.hasTargetAbsAngCheck()) return false;
      if (hasTargetAbsAngCheck()) {
        if (!getTargetAbsAngCheck()
            .equals(other.getTargetAbsAngCheck())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasViewAngles()) {
        hash = (37 * hash) + VIEW_ANGLES_FIELD_NUMBER;
        hash = (53 * hash) + getViewAngles().hashCode();
      }
      if (hasRenderTickCount()) {
        hash = (37 * hash) + RENDER_TICK_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getRenderTickCount();
      }
      if (hasRenderTickFraction()) {
        hash = (37 * hash) + RENDER_TICK_FRACTION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRenderTickFraction());
      }
      if (hasPlayerTickCount()) {
        hash = (37 * hash) + PLAYER_TICK_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerTickCount();
      }
      if (hasPlayerTickFraction()) {
        hash = (37 * hash) + PLAYER_TICK_FRACTION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPlayerTickFraction());
      }
      if (hasClInterp()) {
        hash = (37 * hash) + CL_INTERP_FIELD_NUMBER;
        hash = (53 * hash) + getClInterp().hashCode();
      }
      if (hasSvInterp0()) {
        hash = (37 * hash) + SV_INTERP0_FIELD_NUMBER;
        hash = (53 * hash) + getSvInterp0().hashCode();
      }
      if (hasSvInterp1()) {
        hash = (37 * hash) + SV_INTERP1_FIELD_NUMBER;
        hash = (53 * hash) + getSvInterp1().hashCode();
      }
      if (hasPlayerInterp()) {
        hash = (37 * hash) + PLAYER_INTERP_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerInterp().hashCode();
      }
      if (hasFrameNumber()) {
        hash = (37 * hash) + FRAME_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getFrameNumber();
      }
      if (hasTargetEntIndex()) {
        hash = (37 * hash) + TARGET_ENT_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getTargetEntIndex();
      }
      if (hasShootPosition()) {
        hash = (37 * hash) + SHOOT_POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getShootPosition().hashCode();
      }
      if (hasTargetHeadPosCheck()) {
        hash = (37 * hash) + TARGET_HEAD_POS_CHECK_FIELD_NUMBER;
        hash = (53 * hash) + getTargetHeadPosCheck().hashCode();
      }
      if (hasTargetAbsPosCheck()) {
        hash = (37 * hash) + TARGET_ABS_POS_CHECK_FIELD_NUMBER;
        hash = (53 * hash) + getTargetAbsPosCheck().hashCode();
      }
      if (hasTargetAbsAngCheck()) {
        hash = (37 * hash) + TARGET_ABS_ANG_CHECK_FIELD_NUMBER;
        hash = (53 * hash) + getTargetAbsAngCheck().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOInputHistoryEntryPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CsUsercmd.CSGOInputHistoryEntryPB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSGOInputHistoryEntryPB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSGOInputHistoryEntryPB)
        CsUsercmd.CSGOInputHistoryEntryPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CsUsercmd.internal_static_CSGOInputHistoryEntryPB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CsUsercmd.internal_static_CSGOInputHistoryEntryPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CsUsercmd.CSGOInputHistoryEntryPB.class, CsUsercmd.CSGOInputHistoryEntryPB.Builder.class);
      }

      // Construct using CsUsercmd.CSGOInputHistoryEntryPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getViewAnglesFieldBuilder();
          getClInterpFieldBuilder();
          getSvInterp0FieldBuilder();
          getSvInterp1FieldBuilder();
          getPlayerInterpFieldBuilder();
          getShootPositionFieldBuilder();
          getTargetHeadPosCheckFieldBuilder();
          getTargetAbsPosCheckFieldBuilder();
          getTargetAbsAngCheckFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (viewAnglesBuilder_ == null) {
          viewAngles_ = null;
        } else {
          viewAnglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        renderTickCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        renderTickFraction_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerTickCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        playerTickFraction_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (clInterpBuilder_ == null) {
          clInterp_ = null;
        } else {
          clInterpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (svInterp0Builder_ == null) {
          svInterp0_ = null;
        } else {
          svInterp0Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (svInterp1Builder_ == null) {
          svInterp1_ = null;
        } else {
          svInterp1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (playerInterpBuilder_ == null) {
          playerInterp_ = null;
        } else {
          playerInterpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        frameNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        targetEntIndex_ = -1;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (shootPositionBuilder_ == null) {
          shootPosition_ = null;
        } else {
          shootPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (targetHeadPosCheckBuilder_ == null) {
          targetHeadPosCheck_ = null;
        } else {
          targetHeadPosCheckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (targetAbsPosCheckBuilder_ == null) {
          targetAbsPosCheck_ = null;
        } else {
          targetAbsPosCheckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (targetAbsAngCheckBuilder_ == null) {
          targetAbsAngCheck_ = null;
        } else {
          targetAbsAngCheckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CsUsercmd.internal_static_CSGOInputHistoryEntryPB_descriptor;
      }

      @java.lang.Override
      public CsUsercmd.CSGOInputHistoryEntryPB getDefaultInstanceForType() {
        return CsUsercmd.CSGOInputHistoryEntryPB.getDefaultInstance();
      }

      @java.lang.Override
      public CsUsercmd.CSGOInputHistoryEntryPB build() {
        CsUsercmd.CSGOInputHistoryEntryPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CsUsercmd.CSGOInputHistoryEntryPB buildPartial() {
        CsUsercmd.CSGOInputHistoryEntryPB result = new CsUsercmd.CSGOInputHistoryEntryPB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (viewAnglesBuilder_ == null) {
            result.viewAngles_ = viewAngles_;
          } else {
            result.viewAngles_ = viewAnglesBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.renderTickCount_ = renderTickCount_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.renderTickFraction_ = renderTickFraction_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.playerTickCount_ = playerTickCount_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.playerTickFraction_ = playerTickFraction_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (clInterpBuilder_ == null) {
            result.clInterp_ = clInterp_;
          } else {
            result.clInterp_ = clInterpBuilder_.build();
          }
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          if (svInterp0Builder_ == null) {
            result.svInterp0_ = svInterp0_;
          } else {
            result.svInterp0_ = svInterp0Builder_.build();
          }
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          if (svInterp1Builder_ == null) {
            result.svInterp1_ = svInterp1_;
          } else {
            result.svInterp1_ = svInterp1Builder_.build();
          }
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          if (playerInterpBuilder_ == null) {
            result.playerInterp_ = playerInterp_;
          } else {
            result.playerInterp_ = playerInterpBuilder_.build();
          }
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.frameNumber_ = frameNumber_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          to_bitField0_ |= 0x00000400;
        }
        result.targetEntIndex_ = targetEntIndex_;
        if (((from_bitField0_ & 0x00000800) != 0)) {
          if (shootPositionBuilder_ == null) {
            result.shootPosition_ = shootPosition_;
          } else {
            result.shootPosition_ = shootPositionBuilder_.build();
          }
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          if (targetHeadPosCheckBuilder_ == null) {
            result.targetHeadPosCheck_ = targetHeadPosCheck_;
          } else {
            result.targetHeadPosCheck_ = targetHeadPosCheckBuilder_.build();
          }
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          if (targetAbsPosCheckBuilder_ == null) {
            result.targetAbsPosCheck_ = targetAbsPosCheck_;
          } else {
            result.targetAbsPosCheck_ = targetAbsPosCheckBuilder_.build();
          }
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          if (targetAbsAngCheckBuilder_ == null) {
            result.targetAbsAngCheck_ = targetAbsAngCheck_;
          } else {
            result.targetAbsAngCheck_ = targetAbsAngCheckBuilder_.build();
          }
          to_bitField0_ |= 0x00004000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CsUsercmd.CSGOInputHistoryEntryPB) {
          return mergeFrom((CsUsercmd.CSGOInputHistoryEntryPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CsUsercmd.CSGOInputHistoryEntryPB other) {
        if (other == CsUsercmd.CSGOInputHistoryEntryPB.getDefaultInstance()) return this;
        if (other.hasViewAngles()) {
          mergeViewAngles(other.getViewAngles());
        }
        if (other.hasRenderTickCount()) {
          setRenderTickCount(other.getRenderTickCount());
        }
        if (other.hasRenderTickFraction()) {
          setRenderTickFraction(other.getRenderTickFraction());
        }
        if (other.hasPlayerTickCount()) {
          setPlayerTickCount(other.getPlayerTickCount());
        }
        if (other.hasPlayerTickFraction()) {
          setPlayerTickFraction(other.getPlayerTickFraction());
        }
        if (other.hasClInterp()) {
          mergeClInterp(other.getClInterp());
        }
        if (other.hasSvInterp0()) {
          mergeSvInterp0(other.getSvInterp0());
        }
        if (other.hasSvInterp1()) {
          mergeSvInterp1(other.getSvInterp1());
        }
        if (other.hasPlayerInterp()) {
          mergePlayerInterp(other.getPlayerInterp());
        }
        if (other.hasFrameNumber()) {
          setFrameNumber(other.getFrameNumber());
        }
        if (other.hasTargetEntIndex()) {
          setTargetEntIndex(other.getTargetEntIndex());
        }
        if (other.hasShootPosition()) {
          mergeShootPosition(other.getShootPosition());
        }
        if (other.hasTargetHeadPosCheck()) {
          mergeTargetHeadPosCheck(other.getTargetHeadPosCheck());
        }
        if (other.hasTargetAbsPosCheck()) {
          mergeTargetAbsPosCheck(other.getTargetAbsPosCheck());
        }
        if (other.hasTargetAbsAngCheck()) {
          mergeTargetAbsAngCheck(other.getTargetAbsAngCheck());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CsUsercmd.CSGOInputHistoryEntryPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CsUsercmd.CSGOInputHistoryEntryPB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Networkbasetypes.CMsgQAngle viewAngles_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgQAngle, Networkbasetypes.CMsgQAngle.Builder, Networkbasetypes.CMsgQAngleOrBuilder> viewAnglesBuilder_;
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       * @return Whether the viewAngles field is set.
       */
      public boolean hasViewAngles() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       * @return The viewAngles.
       */
      public Networkbasetypes.CMsgQAngle getViewAngles() {
        if (viewAnglesBuilder_ == null) {
          return viewAngles_ == null ? Networkbasetypes.CMsgQAngle.getDefaultInstance() : viewAngles_;
        } else {
          return viewAnglesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       */
      public Builder setViewAngles(Networkbasetypes.CMsgQAngle value) {
        if (viewAnglesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          viewAngles_ = value;
          onChanged();
        } else {
          viewAnglesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       */
      public Builder setViewAngles(
          Networkbasetypes.CMsgQAngle.Builder builderForValue) {
        if (viewAnglesBuilder_ == null) {
          viewAngles_ = builderForValue.build();
          onChanged();
        } else {
          viewAnglesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       */
      public Builder mergeViewAngles(Networkbasetypes.CMsgQAngle value) {
        if (viewAnglesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              viewAngles_ != null &&
              viewAngles_ != Networkbasetypes.CMsgQAngle.getDefaultInstance()) {
            viewAngles_ =
              Networkbasetypes.CMsgQAngle.newBuilder(viewAngles_).mergeFrom(value).buildPartial();
          } else {
            viewAngles_ = value;
          }
          onChanged();
        } else {
          viewAnglesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       */
      public Builder clearViewAngles() {
        if (viewAnglesBuilder_ == null) {
          viewAngles_ = null;
          onChanged();
        } else {
          viewAnglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       */
      public Networkbasetypes.CMsgQAngle.Builder getViewAnglesBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getViewAnglesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       */
      public Networkbasetypes.CMsgQAngleOrBuilder getViewAnglesOrBuilder() {
        if (viewAnglesBuilder_ != null) {
          return viewAnglesBuilder_.getMessageOrBuilder();
        } else {
          return viewAngles_ == null ?
              Networkbasetypes.CMsgQAngle.getDefaultInstance() : viewAngles_;
        }
      }
      /**
       * <code>optional .CMsgQAngle view_angles = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgQAngle, Networkbasetypes.CMsgQAngle.Builder, Networkbasetypes.CMsgQAngleOrBuilder> 
          getViewAnglesFieldBuilder() {
        if (viewAnglesBuilder_ == null) {
          viewAnglesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Networkbasetypes.CMsgQAngle, Networkbasetypes.CMsgQAngle.Builder, Networkbasetypes.CMsgQAngleOrBuilder>(
                  getViewAngles(),
                  getParentForChildren(),
                  isClean());
          viewAngles_ = null;
        }
        return viewAnglesBuilder_;
      }

      private int renderTickCount_ ;
      /**
       * <code>optional int32 render_tick_count = 4;</code>
       * @return Whether the renderTickCount field is set.
       */
      @java.lang.Override
      public boolean hasRenderTickCount() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 render_tick_count = 4;</code>
       * @return The renderTickCount.
       */
      @java.lang.Override
      public int getRenderTickCount() {
        return renderTickCount_;
      }
      /**
       * <code>optional int32 render_tick_count = 4;</code>
       * @param value The renderTickCount to set.
       * @return This builder for chaining.
       */
      public Builder setRenderTickCount(int value) {
        bitField0_ |= 0x00000002;
        renderTickCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 render_tick_count = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRenderTickCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        renderTickCount_ = 0;
        onChanged();
        return this;
      }

      private float renderTickFraction_ ;
      /**
       * <code>optional float render_tick_fraction = 5;</code>
       * @return Whether the renderTickFraction field is set.
       */
      @java.lang.Override
      public boolean hasRenderTickFraction() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional float render_tick_fraction = 5;</code>
       * @return The renderTickFraction.
       */
      @java.lang.Override
      public float getRenderTickFraction() {
        return renderTickFraction_;
      }
      /**
       * <code>optional float render_tick_fraction = 5;</code>
       * @param value The renderTickFraction to set.
       * @return This builder for chaining.
       */
      public Builder setRenderTickFraction(float value) {
        bitField0_ |= 0x00000004;
        renderTickFraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float render_tick_fraction = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRenderTickFraction() {
        bitField0_ = (bitField0_ & ~0x00000004);
        renderTickFraction_ = 0F;
        onChanged();
        return this;
      }

      private int playerTickCount_ ;
      /**
       * <code>optional int32 player_tick_count = 6;</code>
       * @return Whether the playerTickCount field is set.
       */
      @java.lang.Override
      public boolean hasPlayerTickCount() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 player_tick_count = 6;</code>
       * @return The playerTickCount.
       */
      @java.lang.Override
      public int getPlayerTickCount() {
        return playerTickCount_;
      }
      /**
       * <code>optional int32 player_tick_count = 6;</code>
       * @param value The playerTickCount to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerTickCount(int value) {
        bitField0_ |= 0x00000008;
        playerTickCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 player_tick_count = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerTickCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerTickCount_ = 0;
        onChanged();
        return this;
      }

      private float playerTickFraction_ ;
      /**
       * <code>optional float player_tick_fraction = 7;</code>
       * @return Whether the playerTickFraction field is set.
       */
      @java.lang.Override
      public boolean hasPlayerTickFraction() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional float player_tick_fraction = 7;</code>
       * @return The playerTickFraction.
       */
      @java.lang.Override
      public float getPlayerTickFraction() {
        return playerTickFraction_;
      }
      /**
       * <code>optional float player_tick_fraction = 7;</code>
       * @param value The playerTickFraction to set.
       * @return This builder for chaining.
       */
      public Builder setPlayerTickFraction(float value) {
        bitField0_ |= 0x00000010;
        playerTickFraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float player_tick_fraction = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayerTickFraction() {
        bitField0_ = (bitField0_ & ~0x00000010);
        playerTickFraction_ = 0F;
        onChanged();
        return this;
      }

      private CsUsercmd.CSGOInterpolationInfoPB clInterp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> clInterpBuilder_;
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       * @return Whether the clInterp field is set.
       */
      public boolean hasClInterp() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       * @return The clInterp.
       */
      public CsUsercmd.CSGOInterpolationInfoPB getClInterp() {
        if (clInterpBuilder_ == null) {
          return clInterp_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : clInterp_;
        } else {
          return clInterpBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       */
      public Builder setClInterp(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (clInterpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clInterp_ = value;
          onChanged();
        } else {
          clInterpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       */
      public Builder setClInterp(
          CsUsercmd.CSGOInterpolationInfoPB.Builder builderForValue) {
        if (clInterpBuilder_ == null) {
          clInterp_ = builderForValue.build();
          onChanged();
        } else {
          clInterpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       */
      public Builder mergeClInterp(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (clInterpBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              clInterp_ != null &&
              clInterp_ != CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance()) {
            clInterp_ =
              CsUsercmd.CSGOInterpolationInfoPB.newBuilder(clInterp_).mergeFrom(value).buildPartial();
          } else {
            clInterp_ = value;
          }
          onChanged();
        } else {
          clInterpBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       */
      public Builder clearClInterp() {
        if (clInterpBuilder_ == null) {
          clInterp_ = null;
          onChanged();
        } else {
          clInterpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPB.Builder getClInterpBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getClInterpFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getClInterpOrBuilder() {
        if (clInterpBuilder_ != null) {
          return clInterpBuilder_.getMessageOrBuilder();
        } else {
          return clInterp_ == null ?
              CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : clInterp_;
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB cl_interp = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> 
          getClInterpFieldBuilder() {
        if (clInterpBuilder_ == null) {
          clInterpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder>(
                  getClInterp(),
                  getParentForChildren(),
                  isClean());
          clInterp_ = null;
        }
        return clInterpBuilder_;
      }

      private CsUsercmd.CSGOInterpolationInfoPB svInterp0_;
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> svInterp0Builder_;
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       * @return Whether the svInterp0 field is set.
       */
      public boolean hasSvInterp0() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       * @return The svInterp0.
       */
      public CsUsercmd.CSGOInterpolationInfoPB getSvInterp0() {
        if (svInterp0Builder_ == null) {
          return svInterp0_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp0_;
        } else {
          return svInterp0Builder_.getMessage();
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       */
      public Builder setSvInterp0(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (svInterp0Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          svInterp0_ = value;
          onChanged();
        } else {
          svInterp0Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       */
      public Builder setSvInterp0(
          CsUsercmd.CSGOInterpolationInfoPB.Builder builderForValue) {
        if (svInterp0Builder_ == null) {
          svInterp0_ = builderForValue.build();
          onChanged();
        } else {
          svInterp0Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       */
      public Builder mergeSvInterp0(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (svInterp0Builder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
              svInterp0_ != null &&
              svInterp0_ != CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance()) {
            svInterp0_ =
              CsUsercmd.CSGOInterpolationInfoPB.newBuilder(svInterp0_).mergeFrom(value).buildPartial();
          } else {
            svInterp0_ = value;
          }
          onChanged();
        } else {
          svInterp0Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       */
      public Builder clearSvInterp0() {
        if (svInterp0Builder_ == null) {
          svInterp0_ = null;
          onChanged();
        } else {
          svInterp0Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPB.Builder getSvInterp0Builder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getSvInterp0FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getSvInterp0OrBuilder() {
        if (svInterp0Builder_ != null) {
          return svInterp0Builder_.getMessageOrBuilder();
        } else {
          return svInterp0_ == null ?
              CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp0_;
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp0 = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> 
          getSvInterp0FieldBuilder() {
        if (svInterp0Builder_ == null) {
          svInterp0Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder>(
                  getSvInterp0(),
                  getParentForChildren(),
                  isClean());
          svInterp0_ = null;
        }
        return svInterp0Builder_;
      }

      private CsUsercmd.CSGOInterpolationInfoPB svInterp1_;
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> svInterp1Builder_;
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       * @return Whether the svInterp1 field is set.
       */
      public boolean hasSvInterp1() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       * @return The svInterp1.
       */
      public CsUsercmd.CSGOInterpolationInfoPB getSvInterp1() {
        if (svInterp1Builder_ == null) {
          return svInterp1_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp1_;
        } else {
          return svInterp1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       */
      public Builder setSvInterp1(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (svInterp1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          svInterp1_ = value;
          onChanged();
        } else {
          svInterp1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       */
      public Builder setSvInterp1(
          CsUsercmd.CSGOInterpolationInfoPB.Builder builderForValue) {
        if (svInterp1Builder_ == null) {
          svInterp1_ = builderForValue.build();
          onChanged();
        } else {
          svInterp1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       */
      public Builder mergeSvInterp1(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (svInterp1Builder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
              svInterp1_ != null &&
              svInterp1_ != CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance()) {
            svInterp1_ =
              CsUsercmd.CSGOInterpolationInfoPB.newBuilder(svInterp1_).mergeFrom(value).buildPartial();
          } else {
            svInterp1_ = value;
          }
          onChanged();
        } else {
          svInterp1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       */
      public Builder clearSvInterp1() {
        if (svInterp1Builder_ == null) {
          svInterp1_ = null;
          onChanged();
        } else {
          svInterp1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPB.Builder getSvInterp1Builder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getSvInterp1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getSvInterp1OrBuilder() {
        if (svInterp1Builder_ != null) {
          return svInterp1Builder_.getMessageOrBuilder();
        } else {
          return svInterp1_ == null ?
              CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : svInterp1_;
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB sv_interp1 = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> 
          getSvInterp1FieldBuilder() {
        if (svInterp1Builder_ == null) {
          svInterp1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder>(
                  getSvInterp1(),
                  getParentForChildren(),
                  isClean());
          svInterp1_ = null;
        }
        return svInterp1Builder_;
      }

      private CsUsercmd.CSGOInterpolationInfoPB playerInterp_;
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> playerInterpBuilder_;
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       * @return Whether the playerInterp field is set.
       */
      public boolean hasPlayerInterp() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       * @return The playerInterp.
       */
      public CsUsercmd.CSGOInterpolationInfoPB getPlayerInterp() {
        if (playerInterpBuilder_ == null) {
          return playerInterp_ == null ? CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : playerInterp_;
        } else {
          return playerInterpBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       */
      public Builder setPlayerInterp(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (playerInterpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerInterp_ = value;
          onChanged();
        } else {
          playerInterpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       */
      public Builder setPlayerInterp(
          CsUsercmd.CSGOInterpolationInfoPB.Builder builderForValue) {
        if (playerInterpBuilder_ == null) {
          playerInterp_ = builderForValue.build();
          onChanged();
        } else {
          playerInterpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       */
      public Builder mergePlayerInterp(CsUsercmd.CSGOInterpolationInfoPB value) {
        if (playerInterpBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
              playerInterp_ != null &&
              playerInterp_ != CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance()) {
            playerInterp_ =
              CsUsercmd.CSGOInterpolationInfoPB.newBuilder(playerInterp_).mergeFrom(value).buildPartial();
          } else {
            playerInterp_ = value;
          }
          onChanged();
        } else {
          playerInterpBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       */
      public Builder clearPlayerInterp() {
        if (playerInterpBuilder_ == null) {
          playerInterp_ = null;
          onChanged();
        } else {
          playerInterpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPB.Builder getPlayerInterpBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getPlayerInterpFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       */
      public CsUsercmd.CSGOInterpolationInfoPBOrBuilder getPlayerInterpOrBuilder() {
        if (playerInterpBuilder_ != null) {
          return playerInterpBuilder_.getMessageOrBuilder();
        } else {
          return playerInterp_ == null ?
              CsUsercmd.CSGOInterpolationInfoPB.getDefaultInstance() : playerInterp_;
        }
      }
      /**
       * <code>optional .CSGOInterpolationInfoPB player_interp = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder> 
          getPlayerInterpFieldBuilder() {
        if (playerInterpBuilder_ == null) {
          playerInterpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              CsUsercmd.CSGOInterpolationInfoPB, CsUsercmd.CSGOInterpolationInfoPB.Builder, CsUsercmd.CSGOInterpolationInfoPBOrBuilder>(
                  getPlayerInterp(),
                  getParentForChildren(),
                  isClean());
          playerInterp_ = null;
        }
        return playerInterpBuilder_;
      }

      private int frameNumber_ ;
      /**
       * <code>optional int32 frame_number = 20;</code>
       * @return Whether the frameNumber field is set.
       */
      @java.lang.Override
      public boolean hasFrameNumber() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional int32 frame_number = 20;</code>
       * @return The frameNumber.
       */
      @java.lang.Override
      public int getFrameNumber() {
        return frameNumber_;
      }
      /**
       * <code>optional int32 frame_number = 20;</code>
       * @param value The frameNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFrameNumber(int value) {
        bitField0_ |= 0x00000200;
        frameNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 frame_number = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameNumber() {
        bitField0_ = (bitField0_ & ~0x00000200);
        frameNumber_ = 0;
        onChanged();
        return this;
      }

      private int targetEntIndex_ = -1;
      /**
       * <code>optional int32 target_ent_index = 8 [default = -1];</code>
       * @return Whether the targetEntIndex field is set.
       */
      @java.lang.Override
      public boolean hasTargetEntIndex() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional int32 target_ent_index = 8 [default = -1];</code>
       * @return The targetEntIndex.
       */
      @java.lang.Override
      public int getTargetEntIndex() {
        return targetEntIndex_;
      }
      /**
       * <code>optional int32 target_ent_index = 8 [default = -1];</code>
       * @param value The targetEntIndex to set.
       * @return This builder for chaining.
       */
      public Builder setTargetEntIndex(int value) {
        bitField0_ |= 0x00000400;
        targetEntIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 target_ent_index = 8 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetEntIndex() {
        bitField0_ = (bitField0_ & ~0x00000400);
        targetEntIndex_ = -1;
        onChanged();
        return this;
      }

      private Networkbasetypes.CMsgVector shootPosition_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> shootPositionBuilder_;
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       * @return Whether the shootPosition field is set.
       */
      public boolean hasShootPosition() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       * @return The shootPosition.
       */
      public Networkbasetypes.CMsgVector getShootPosition() {
        if (shootPositionBuilder_ == null) {
          return shootPosition_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : shootPosition_;
        } else {
          return shootPositionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       */
      public Builder setShootPosition(Networkbasetypes.CMsgVector value) {
        if (shootPositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shootPosition_ = value;
          onChanged();
        } else {
          shootPositionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       */
      public Builder setShootPosition(
          Networkbasetypes.CMsgVector.Builder builderForValue) {
        if (shootPositionBuilder_ == null) {
          shootPosition_ = builderForValue.build();
          onChanged();
        } else {
          shootPositionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       */
      public Builder mergeShootPosition(Networkbasetypes.CMsgVector value) {
        if (shootPositionBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
              shootPosition_ != null &&
              shootPosition_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
            shootPosition_ =
              Networkbasetypes.CMsgVector.newBuilder(shootPosition_).mergeFrom(value).buildPartial();
          } else {
            shootPosition_ = value;
          }
          onChanged();
        } else {
          shootPositionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       */
      public Builder clearShootPosition() {
        if (shootPositionBuilder_ == null) {
          shootPosition_ = null;
          onChanged();
        } else {
          shootPositionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       */
      public Networkbasetypes.CMsgVector.Builder getShootPositionBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getShootPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       */
      public Networkbasetypes.CMsgVectorOrBuilder getShootPositionOrBuilder() {
        if (shootPositionBuilder_ != null) {
          return shootPositionBuilder_.getMessageOrBuilder();
        } else {
          return shootPosition_ == null ?
              Networkbasetypes.CMsgVector.getDefaultInstance() : shootPosition_;
        }
      }
      /**
       * <code>optional .CMsgVector shoot_position = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
          getShootPositionFieldBuilder() {
        if (shootPositionBuilder_ == null) {
          shootPositionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                  getShootPosition(),
                  getParentForChildren(),
                  isClean());
          shootPosition_ = null;
        }
        return shootPositionBuilder_;
      }

      private Networkbasetypes.CMsgVector targetHeadPosCheck_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> targetHeadPosCheckBuilder_;
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       * @return Whether the targetHeadPosCheck field is set.
       */
      public boolean hasTargetHeadPosCheck() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       * @return The targetHeadPosCheck.
       */
      public Networkbasetypes.CMsgVector getTargetHeadPosCheck() {
        if (targetHeadPosCheckBuilder_ == null) {
          return targetHeadPosCheck_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : targetHeadPosCheck_;
        } else {
          return targetHeadPosCheckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       */
      public Builder setTargetHeadPosCheck(Networkbasetypes.CMsgVector value) {
        if (targetHeadPosCheckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetHeadPosCheck_ = value;
          onChanged();
        } else {
          targetHeadPosCheckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       */
      public Builder setTargetHeadPosCheck(
          Networkbasetypes.CMsgVector.Builder builderForValue) {
        if (targetHeadPosCheckBuilder_ == null) {
          targetHeadPosCheck_ = builderForValue.build();
          onChanged();
        } else {
          targetHeadPosCheckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       */
      public Builder mergeTargetHeadPosCheck(Networkbasetypes.CMsgVector value) {
        if (targetHeadPosCheckBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0) &&
              targetHeadPosCheck_ != null &&
              targetHeadPosCheck_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
            targetHeadPosCheck_ =
              Networkbasetypes.CMsgVector.newBuilder(targetHeadPosCheck_).mergeFrom(value).buildPartial();
          } else {
            targetHeadPosCheck_ = value;
          }
          onChanged();
        } else {
          targetHeadPosCheckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       */
      public Builder clearTargetHeadPosCheck() {
        if (targetHeadPosCheckBuilder_ == null) {
          targetHeadPosCheck_ = null;
          onChanged();
        } else {
          targetHeadPosCheckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       */
      public Networkbasetypes.CMsgVector.Builder getTargetHeadPosCheckBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getTargetHeadPosCheckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       */
      public Networkbasetypes.CMsgVectorOrBuilder getTargetHeadPosCheckOrBuilder() {
        if (targetHeadPosCheckBuilder_ != null) {
          return targetHeadPosCheckBuilder_.getMessageOrBuilder();
        } else {
          return targetHeadPosCheck_ == null ?
              Networkbasetypes.CMsgVector.getDefaultInstance() : targetHeadPosCheck_;
        }
      }
      /**
       * <code>optional .CMsgVector target_head_pos_check = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
          getTargetHeadPosCheckFieldBuilder() {
        if (targetHeadPosCheckBuilder_ == null) {
          targetHeadPosCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                  getTargetHeadPosCheck(),
                  getParentForChildren(),
                  isClean());
          targetHeadPosCheck_ = null;
        }
        return targetHeadPosCheckBuilder_;
      }

      private Networkbasetypes.CMsgVector targetAbsPosCheck_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> targetAbsPosCheckBuilder_;
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       * @return Whether the targetAbsPosCheck field is set.
       */
      public boolean hasTargetAbsPosCheck() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       * @return The targetAbsPosCheck.
       */
      public Networkbasetypes.CMsgVector getTargetAbsPosCheck() {
        if (targetAbsPosCheckBuilder_ == null) {
          return targetAbsPosCheck_ == null ? Networkbasetypes.CMsgVector.getDefaultInstance() : targetAbsPosCheck_;
        } else {
          return targetAbsPosCheckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       */
      public Builder setTargetAbsPosCheck(Networkbasetypes.CMsgVector value) {
        if (targetAbsPosCheckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetAbsPosCheck_ = value;
          onChanged();
        } else {
          targetAbsPosCheckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       */
      public Builder setTargetAbsPosCheck(
          Networkbasetypes.CMsgVector.Builder builderForValue) {
        if (targetAbsPosCheckBuilder_ == null) {
          targetAbsPosCheck_ = builderForValue.build();
          onChanged();
        } else {
          targetAbsPosCheckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       */
      public Builder mergeTargetAbsPosCheck(Networkbasetypes.CMsgVector value) {
        if (targetAbsPosCheckBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0) &&
              targetAbsPosCheck_ != null &&
              targetAbsPosCheck_ != Networkbasetypes.CMsgVector.getDefaultInstance()) {
            targetAbsPosCheck_ =
              Networkbasetypes.CMsgVector.newBuilder(targetAbsPosCheck_).mergeFrom(value).buildPartial();
          } else {
            targetAbsPosCheck_ = value;
          }
          onChanged();
        } else {
          targetAbsPosCheckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       */
      public Builder clearTargetAbsPosCheck() {
        if (targetAbsPosCheckBuilder_ == null) {
          targetAbsPosCheck_ = null;
          onChanged();
        } else {
          targetAbsPosCheckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       */
      public Networkbasetypes.CMsgVector.Builder getTargetAbsPosCheckBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getTargetAbsPosCheckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       */
      public Networkbasetypes.CMsgVectorOrBuilder getTargetAbsPosCheckOrBuilder() {
        if (targetAbsPosCheckBuilder_ != null) {
          return targetAbsPosCheckBuilder_.getMessageOrBuilder();
        } else {
          return targetAbsPosCheck_ == null ?
              Networkbasetypes.CMsgVector.getDefaultInstance() : targetAbsPosCheck_;
        }
      }
      /**
       * <code>optional .CMsgVector target_abs_pos_check = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder> 
          getTargetAbsPosCheckFieldBuilder() {
        if (targetAbsPosCheckBuilder_ == null) {
          targetAbsPosCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Networkbasetypes.CMsgVector, Networkbasetypes.CMsgVector.Builder, Networkbasetypes.CMsgVectorOrBuilder>(
                  getTargetAbsPosCheck(),
                  getParentForChildren(),
                  isClean());
          targetAbsPosCheck_ = null;
        }
        return targetAbsPosCheckBuilder_;
      }

      private Networkbasetypes.CMsgQAngle targetAbsAngCheck_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgQAngle, Networkbasetypes.CMsgQAngle.Builder, Networkbasetypes.CMsgQAngleOrBuilder> targetAbsAngCheckBuilder_;
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       * @return Whether the targetAbsAngCheck field is set.
       */
      public boolean hasTargetAbsAngCheck() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       * @return The targetAbsAngCheck.
       */
      public Networkbasetypes.CMsgQAngle getTargetAbsAngCheck() {
        if (targetAbsAngCheckBuilder_ == null) {
          return targetAbsAngCheck_ == null ? Networkbasetypes.CMsgQAngle.getDefaultInstance() : targetAbsAngCheck_;
        } else {
          return targetAbsAngCheckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       */
      public Builder setTargetAbsAngCheck(Networkbasetypes.CMsgQAngle value) {
        if (targetAbsAngCheckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetAbsAngCheck_ = value;
          onChanged();
        } else {
          targetAbsAngCheckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       */
      public Builder setTargetAbsAngCheck(
          Networkbasetypes.CMsgQAngle.Builder builderForValue) {
        if (targetAbsAngCheckBuilder_ == null) {
          targetAbsAngCheck_ = builderForValue.build();
          onChanged();
        } else {
          targetAbsAngCheckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       */
      public Builder mergeTargetAbsAngCheck(Networkbasetypes.CMsgQAngle value) {
        if (targetAbsAngCheckBuilder_ == null) {
          if (((bitField0_ & 0x00004000) != 0) &&
              targetAbsAngCheck_ != null &&
              targetAbsAngCheck_ != Networkbasetypes.CMsgQAngle.getDefaultInstance()) {
            targetAbsAngCheck_ =
              Networkbasetypes.CMsgQAngle.newBuilder(targetAbsAngCheck_).mergeFrom(value).buildPartial();
          } else {
            targetAbsAngCheck_ = value;
          }
          onChanged();
        } else {
          targetAbsAngCheckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       */
      public Builder clearTargetAbsAngCheck() {
        if (targetAbsAngCheckBuilder_ == null) {
          targetAbsAngCheck_ = null;
          onChanged();
        } else {
          targetAbsAngCheckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       */
      public Networkbasetypes.CMsgQAngle.Builder getTargetAbsAngCheckBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getTargetAbsAngCheckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       */
      public Networkbasetypes.CMsgQAngleOrBuilder getTargetAbsAngCheckOrBuilder() {
        if (targetAbsAngCheckBuilder_ != null) {
          return targetAbsAngCheckBuilder_.getMessageOrBuilder();
        } else {
          return targetAbsAngCheck_ == null ?
              Networkbasetypes.CMsgQAngle.getDefaultInstance() : targetAbsAngCheck_;
        }
      }
      /**
       * <code>optional .CMsgQAngle target_abs_ang_check = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Networkbasetypes.CMsgQAngle, Networkbasetypes.CMsgQAngle.Builder, Networkbasetypes.CMsgQAngleOrBuilder> 
          getTargetAbsAngCheckFieldBuilder() {
        if (targetAbsAngCheckBuilder_ == null) {
          targetAbsAngCheckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Networkbasetypes.CMsgQAngle, Networkbasetypes.CMsgQAngle.Builder, Networkbasetypes.CMsgQAngleOrBuilder>(
                  getTargetAbsAngCheck(),
                  getParentForChildren(),
                  isClean());
          targetAbsAngCheck_ = null;
        }
        return targetAbsAngCheckBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSGOInputHistoryEntryPB)
    }

    // @@protoc_insertion_point(class_scope:CSGOInputHistoryEntryPB)
    private static final CsUsercmd.CSGOInputHistoryEntryPB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CsUsercmd.CSGOInputHistoryEntryPB();
    }

    public static CsUsercmd.CSGOInputHistoryEntryPB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSGOInputHistoryEntryPB>
        PARSER = new com.google.protobuf.AbstractParser<CSGOInputHistoryEntryPB>() {
      @java.lang.Override
      public CSGOInputHistoryEntryPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSGOInputHistoryEntryPB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSGOInputHistoryEntryPB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSGOInputHistoryEntryPB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CsUsercmd.CSGOInputHistoryEntryPB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSGOUserCmdPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CSGOUserCmdPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CBaseUserCmdPB base = 1;</code>
     * @return Whether the base field is set.
     */
    boolean hasBase();
    /**
     * <code>optional .CBaseUserCmdPB base = 1;</code>
     * @return The base.
     */
    Usercmd.CBaseUserCmdPB getBase();
    /**
     * <code>optional .CBaseUserCmdPB base = 1;</code>
     */
    Usercmd.CBaseUserCmdPBOrBuilder getBaseOrBuilder();

    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    java.util.List<CsUsercmd.CSGOInputHistoryEntryPB> 
        getInputHistoryList();
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    CsUsercmd.CSGOInputHistoryEntryPB getInputHistory(int index);
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    int getInputHistoryCount();
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    java.util.List<? extends CsUsercmd.CSGOInputHistoryEntryPBOrBuilder> 
        getInputHistoryOrBuilderList();
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    CsUsercmd.CSGOInputHistoryEntryPBOrBuilder getInputHistoryOrBuilder(
        int index);

    /**
     * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
     * @return Whether the attack1StartHistoryIndex field is set.
     */
    boolean hasAttack1StartHistoryIndex();
    /**
     * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
     * @return The attack1StartHistoryIndex.
     */
    int getAttack1StartHistoryIndex();

    /**
     * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
     * @return Whether the attack2StartHistoryIndex field is set.
     */
    boolean hasAttack2StartHistoryIndex();
    /**
     * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
     * @return The attack2StartHistoryIndex.
     */
    int getAttack2StartHistoryIndex();

    /**
     * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
     * @return Whether the attack3StartHistoryIndex field is set.
     */
    boolean hasAttack3StartHistoryIndex();
    /**
     * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
     * @return The attack3StartHistoryIndex.
     */
    int getAttack3StartHistoryIndex();
  }
  /**
   * Protobuf type {@code CSGOUserCmdPB}
   */
  public static final class CSGOUserCmdPB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CSGOUserCmdPB)
      CSGOUserCmdPBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CSGOUserCmdPB.newBuilder() to construct.
    private CSGOUserCmdPB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CSGOUserCmdPB() {
      inputHistory_ = java.util.Collections.emptyList();
      attack1StartHistoryIndex_ = -1;
      attack2StartHistoryIndex_ = -1;
      attack3StartHistoryIndex_ = -1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CSGOUserCmdPB();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CSGOUserCmdPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Usercmd.CBaseUserCmdPB.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = base_.toBuilder();
              }
              base_ = input.readMessage(Usercmd.CBaseUserCmdPB.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(base_);
                base_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                inputHistory_ = new java.util.ArrayList<CsUsercmd.CSGOInputHistoryEntryPB>();
                mutable_bitField0_ |= 0x00000002;
              }
              inputHistory_.add(
                  input.readMessage(CsUsercmd.CSGOInputHistoryEntryPB.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000002;
              attack1StartHistoryIndex_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000004;
              attack2StartHistoryIndex_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              attack3StartHistoryIndex_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          inputHistory_ = java.util.Collections.unmodifiableList(inputHistory_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CsUsercmd.internal_static_CSGOUserCmdPB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CsUsercmd.internal_static_CSGOUserCmdPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CsUsercmd.CSGOUserCmdPB.class, CsUsercmd.CSGOUserCmdPB.Builder.class);
    }

    private int bitField0_;
    public static final int BASE_FIELD_NUMBER = 1;
    private Usercmd.CBaseUserCmdPB base_;
    /**
     * <code>optional .CBaseUserCmdPB base = 1;</code>
     * @return Whether the base field is set.
     */
    @java.lang.Override
    public boolean hasBase() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .CBaseUserCmdPB base = 1;</code>
     * @return The base.
     */
    @java.lang.Override
    public Usercmd.CBaseUserCmdPB getBase() {
      return base_ == null ? Usercmd.CBaseUserCmdPB.getDefaultInstance() : base_;
    }
    /**
     * <code>optional .CBaseUserCmdPB base = 1;</code>
     */
    @java.lang.Override
    public Usercmd.CBaseUserCmdPBOrBuilder getBaseOrBuilder() {
      return base_ == null ? Usercmd.CBaseUserCmdPB.getDefaultInstance() : base_;
    }

    public static final int INPUT_HISTORY_FIELD_NUMBER = 2;
    private java.util.List<CsUsercmd.CSGOInputHistoryEntryPB> inputHistory_;
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    @java.lang.Override
    public java.util.List<CsUsercmd.CSGOInputHistoryEntryPB> getInputHistoryList() {
      return inputHistory_;
    }
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends CsUsercmd.CSGOInputHistoryEntryPBOrBuilder> 
        getInputHistoryOrBuilderList() {
      return inputHistory_;
    }
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    @java.lang.Override
    public int getInputHistoryCount() {
      return inputHistory_.size();
    }
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    @java.lang.Override
    public CsUsercmd.CSGOInputHistoryEntryPB getInputHistory(int index) {
      return inputHistory_.get(index);
    }
    /**
     * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
     */
    @java.lang.Override
    public CsUsercmd.CSGOInputHistoryEntryPBOrBuilder getInputHistoryOrBuilder(
        int index) {
      return inputHistory_.get(index);
    }

    public static final int ATTACK1_START_HISTORY_INDEX_FIELD_NUMBER = 6;
    private int attack1StartHistoryIndex_;
    /**
     * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
     * @return Whether the attack1StartHistoryIndex field is set.
     */
    @java.lang.Override
    public boolean hasAttack1StartHistoryIndex() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
     * @return The attack1StartHistoryIndex.
     */
    @java.lang.Override
    public int getAttack1StartHistoryIndex() {
      return attack1StartHistoryIndex_;
    }

    public static final int ATTACK2_START_HISTORY_INDEX_FIELD_NUMBER = 7;
    private int attack2StartHistoryIndex_;
    /**
     * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
     * @return Whether the attack2StartHistoryIndex field is set.
     */
    @java.lang.Override
    public boolean hasAttack2StartHistoryIndex() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
     * @return The attack2StartHistoryIndex.
     */
    @java.lang.Override
    public int getAttack2StartHistoryIndex() {
      return attack2StartHistoryIndex_;
    }

    public static final int ATTACK3_START_HISTORY_INDEX_FIELD_NUMBER = 8;
    private int attack3StartHistoryIndex_;
    /**
     * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
     * @return Whether the attack3StartHistoryIndex field is set.
     */
    @java.lang.Override
    public boolean hasAttack3StartHistoryIndex() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
     * @return The attack3StartHistoryIndex.
     */
    @java.lang.Override
    public int getAttack3StartHistoryIndex() {
      return attack3StartHistoryIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getBase());
      }
      for (int i = 0; i < inputHistory_.size(); i++) {
        output.writeMessage(2, inputHistory_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(6, attack1StartHistoryIndex_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(7, attack2StartHistoryIndex_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(8, attack3StartHistoryIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBase());
      }
      for (int i = 0; i < inputHistory_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, inputHistory_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, attack1StartHistoryIndex_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, attack2StartHistoryIndex_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, attack3StartHistoryIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CsUsercmd.CSGOUserCmdPB)) {
        return super.equals(obj);
      }
      CsUsercmd.CSGOUserCmdPB other = (CsUsercmd.CSGOUserCmdPB) obj;

      if (hasBase() != other.hasBase()) return false;
      if (hasBase()) {
        if (!getBase()
            .equals(other.getBase())) return false;
      }
      if (!getInputHistoryList()
          .equals(other.getInputHistoryList())) return false;
      if (hasAttack1StartHistoryIndex() != other.hasAttack1StartHistoryIndex()) return false;
      if (hasAttack1StartHistoryIndex()) {
        if (getAttack1StartHistoryIndex()
            != other.getAttack1StartHistoryIndex()) return false;
      }
      if (hasAttack2StartHistoryIndex() != other.hasAttack2StartHistoryIndex()) return false;
      if (hasAttack2StartHistoryIndex()) {
        if (getAttack2StartHistoryIndex()
            != other.getAttack2StartHistoryIndex()) return false;
      }
      if (hasAttack3StartHistoryIndex() != other.hasAttack3StartHistoryIndex()) return false;
      if (hasAttack3StartHistoryIndex()) {
        if (getAttack3StartHistoryIndex()
            != other.getAttack3StartHistoryIndex()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBase()) {
        hash = (37 * hash) + BASE_FIELD_NUMBER;
        hash = (53 * hash) + getBase().hashCode();
      }
      if (getInputHistoryCount() > 0) {
        hash = (37 * hash) + INPUT_HISTORY_FIELD_NUMBER;
        hash = (53 * hash) + getInputHistoryList().hashCode();
      }
      if (hasAttack1StartHistoryIndex()) {
        hash = (37 * hash) + ATTACK1_START_HISTORY_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getAttack1StartHistoryIndex();
      }
      if (hasAttack2StartHistoryIndex()) {
        hash = (37 * hash) + ATTACK2_START_HISTORY_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getAttack2StartHistoryIndex();
      }
      if (hasAttack3StartHistoryIndex()) {
        hash = (37 * hash) + ATTACK3_START_HISTORY_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getAttack3StartHistoryIndex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CsUsercmd.CSGOUserCmdPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOUserCmdPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CsUsercmd.CSGOUserCmdPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CsUsercmd.CSGOUserCmdPB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSGOUserCmdPB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CSGOUserCmdPB)
        CsUsercmd.CSGOUserCmdPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CsUsercmd.internal_static_CSGOUserCmdPB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CsUsercmd.internal_static_CSGOUserCmdPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CsUsercmd.CSGOUserCmdPB.class, CsUsercmd.CSGOUserCmdPB.Builder.class);
      }

      // Construct using CsUsercmd.CSGOUserCmdPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBaseFieldBuilder();
          getInputHistoryFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (baseBuilder_ == null) {
          base_ = null;
        } else {
          baseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (inputHistoryBuilder_ == null) {
          inputHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          inputHistoryBuilder_.clear();
        }
        attack1StartHistoryIndex_ = -1;
        bitField0_ = (bitField0_ & ~0x00000004);
        attack2StartHistoryIndex_ = -1;
        bitField0_ = (bitField0_ & ~0x00000008);
        attack3StartHistoryIndex_ = -1;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CsUsercmd.internal_static_CSGOUserCmdPB_descriptor;
      }

      @java.lang.Override
      public CsUsercmd.CSGOUserCmdPB getDefaultInstanceForType() {
        return CsUsercmd.CSGOUserCmdPB.getDefaultInstance();
      }

      @java.lang.Override
      public CsUsercmd.CSGOUserCmdPB build() {
        CsUsercmd.CSGOUserCmdPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CsUsercmd.CSGOUserCmdPB buildPartial() {
        CsUsercmd.CSGOUserCmdPB result = new CsUsercmd.CSGOUserCmdPB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (baseBuilder_ == null) {
            result.base_ = base_;
          } else {
            result.base_ = baseBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (inputHistoryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            inputHistory_ = java.util.Collections.unmodifiableList(inputHistory_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.inputHistory_ = inputHistory_;
        } else {
          result.inputHistory_ = inputHistoryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.attack1StartHistoryIndex_ = attack1StartHistoryIndex_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.attack2StartHistoryIndex_ = attack2StartHistoryIndex_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.attack3StartHistoryIndex_ = attack3StartHistoryIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CsUsercmd.CSGOUserCmdPB) {
          return mergeFrom((CsUsercmd.CSGOUserCmdPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CsUsercmd.CSGOUserCmdPB other) {
        if (other == CsUsercmd.CSGOUserCmdPB.getDefaultInstance()) return this;
        if (other.hasBase()) {
          mergeBase(other.getBase());
        }
        if (inputHistoryBuilder_ == null) {
          if (!other.inputHistory_.isEmpty()) {
            if (inputHistory_.isEmpty()) {
              inputHistory_ = other.inputHistory_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInputHistoryIsMutable();
              inputHistory_.addAll(other.inputHistory_);
            }
            onChanged();
          }
        } else {
          if (!other.inputHistory_.isEmpty()) {
            if (inputHistoryBuilder_.isEmpty()) {
              inputHistoryBuilder_.dispose();
              inputHistoryBuilder_ = null;
              inputHistory_ = other.inputHistory_;
              bitField0_ = (bitField0_ & ~0x00000002);
              inputHistoryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputHistoryFieldBuilder() : null;
            } else {
              inputHistoryBuilder_.addAllMessages(other.inputHistory_);
            }
          }
        }
        if (other.hasAttack1StartHistoryIndex()) {
          setAttack1StartHistoryIndex(other.getAttack1StartHistoryIndex());
        }
        if (other.hasAttack2StartHistoryIndex()) {
          setAttack2StartHistoryIndex(other.getAttack2StartHistoryIndex());
        }
        if (other.hasAttack3StartHistoryIndex()) {
          setAttack3StartHistoryIndex(other.getAttack3StartHistoryIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CsUsercmd.CSGOUserCmdPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CsUsercmd.CSGOUserCmdPB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Usercmd.CBaseUserCmdPB base_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Usercmd.CBaseUserCmdPB, Usercmd.CBaseUserCmdPB.Builder, Usercmd.CBaseUserCmdPBOrBuilder> baseBuilder_;
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       * @return Whether the base field is set.
       */
      public boolean hasBase() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       * @return The base.
       */
      public Usercmd.CBaseUserCmdPB getBase() {
        if (baseBuilder_ == null) {
          return base_ == null ? Usercmd.CBaseUserCmdPB.getDefaultInstance() : base_;
        } else {
          return baseBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       */
      public Builder setBase(Usercmd.CBaseUserCmdPB value) {
        if (baseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          base_ = value;
          onChanged();
        } else {
          baseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       */
      public Builder setBase(
          Usercmd.CBaseUserCmdPB.Builder builderForValue) {
        if (baseBuilder_ == null) {
          base_ = builderForValue.build();
          onChanged();
        } else {
          baseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       */
      public Builder mergeBase(Usercmd.CBaseUserCmdPB value) {
        if (baseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              base_ != null &&
              base_ != Usercmd.CBaseUserCmdPB.getDefaultInstance()) {
            base_ =
              Usercmd.CBaseUserCmdPB.newBuilder(base_).mergeFrom(value).buildPartial();
          } else {
            base_ = value;
          }
          onChanged();
        } else {
          baseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       */
      public Builder clearBase() {
        if (baseBuilder_ == null) {
          base_ = null;
          onChanged();
        } else {
          baseBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       */
      public Usercmd.CBaseUserCmdPB.Builder getBaseBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBaseFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       */
      public Usercmd.CBaseUserCmdPBOrBuilder getBaseOrBuilder() {
        if (baseBuilder_ != null) {
          return baseBuilder_.getMessageOrBuilder();
        } else {
          return base_ == null ?
              Usercmd.CBaseUserCmdPB.getDefaultInstance() : base_;
        }
      }
      /**
       * <code>optional .CBaseUserCmdPB base = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Usercmd.CBaseUserCmdPB, Usercmd.CBaseUserCmdPB.Builder, Usercmd.CBaseUserCmdPBOrBuilder> 
          getBaseFieldBuilder() {
        if (baseBuilder_ == null) {
          baseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Usercmd.CBaseUserCmdPB, Usercmd.CBaseUserCmdPB.Builder, Usercmd.CBaseUserCmdPBOrBuilder>(
                  getBase(),
                  getParentForChildren(),
                  isClean());
          base_ = null;
        }
        return baseBuilder_;
      }

      private java.util.List<CsUsercmd.CSGOInputHistoryEntryPB> inputHistory_ =
        java.util.Collections.emptyList();
      private void ensureInputHistoryIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          inputHistory_ = new java.util.ArrayList<CsUsercmd.CSGOInputHistoryEntryPB>(inputHistory_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          CsUsercmd.CSGOInputHistoryEntryPB, CsUsercmd.CSGOInputHistoryEntryPB.Builder, CsUsercmd.CSGOInputHistoryEntryPBOrBuilder> inputHistoryBuilder_;

      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public java.util.List<CsUsercmd.CSGOInputHistoryEntryPB> getInputHistoryList() {
        if (inputHistoryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputHistory_);
        } else {
          return inputHistoryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public int getInputHistoryCount() {
        if (inputHistoryBuilder_ == null) {
          return inputHistory_.size();
        } else {
          return inputHistoryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public CsUsercmd.CSGOInputHistoryEntryPB getInputHistory(int index) {
        if (inputHistoryBuilder_ == null) {
          return inputHistory_.get(index);
        } else {
          return inputHistoryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder setInputHistory(
          int index, CsUsercmd.CSGOInputHistoryEntryPB value) {
        if (inputHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputHistoryIsMutable();
          inputHistory_.set(index, value);
          onChanged();
        } else {
          inputHistoryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder setInputHistory(
          int index, CsUsercmd.CSGOInputHistoryEntryPB.Builder builderForValue) {
        if (inputHistoryBuilder_ == null) {
          ensureInputHistoryIsMutable();
          inputHistory_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputHistoryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder addInputHistory(CsUsercmd.CSGOInputHistoryEntryPB value) {
        if (inputHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputHistoryIsMutable();
          inputHistory_.add(value);
          onChanged();
        } else {
          inputHistoryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder addInputHistory(
          int index, CsUsercmd.CSGOInputHistoryEntryPB value) {
        if (inputHistoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputHistoryIsMutable();
          inputHistory_.add(index, value);
          onChanged();
        } else {
          inputHistoryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder addInputHistory(
          CsUsercmd.CSGOInputHistoryEntryPB.Builder builderForValue) {
        if (inputHistoryBuilder_ == null) {
          ensureInputHistoryIsMutable();
          inputHistory_.add(builderForValue.build());
          onChanged();
        } else {
          inputHistoryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder addInputHistory(
          int index, CsUsercmd.CSGOInputHistoryEntryPB.Builder builderForValue) {
        if (inputHistoryBuilder_ == null) {
          ensureInputHistoryIsMutable();
          inputHistory_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputHistoryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder addAllInputHistory(
          java.lang.Iterable<? extends CsUsercmd.CSGOInputHistoryEntryPB> values) {
        if (inputHistoryBuilder_ == null) {
          ensureInputHistoryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputHistory_);
          onChanged();
        } else {
          inputHistoryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder clearInputHistory() {
        if (inputHistoryBuilder_ == null) {
          inputHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          inputHistoryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public Builder removeInputHistory(int index) {
        if (inputHistoryBuilder_ == null) {
          ensureInputHistoryIsMutable();
          inputHistory_.remove(index);
          onChanged();
        } else {
          inputHistoryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public CsUsercmd.CSGOInputHistoryEntryPB.Builder getInputHistoryBuilder(
          int index) {
        return getInputHistoryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public CsUsercmd.CSGOInputHistoryEntryPBOrBuilder getInputHistoryOrBuilder(
          int index) {
        if (inputHistoryBuilder_ == null) {
          return inputHistory_.get(index);  } else {
          return inputHistoryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public java.util.List<? extends CsUsercmd.CSGOInputHistoryEntryPBOrBuilder> 
           getInputHistoryOrBuilderList() {
        if (inputHistoryBuilder_ != null) {
          return inputHistoryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputHistory_);
        }
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public CsUsercmd.CSGOInputHistoryEntryPB.Builder addInputHistoryBuilder() {
        return getInputHistoryFieldBuilder().addBuilder(
            CsUsercmd.CSGOInputHistoryEntryPB.getDefaultInstance());
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public CsUsercmd.CSGOInputHistoryEntryPB.Builder addInputHistoryBuilder(
          int index) {
        return getInputHistoryFieldBuilder().addBuilder(
            index, CsUsercmd.CSGOInputHistoryEntryPB.getDefaultInstance());
      }
      /**
       * <code>repeated .CSGOInputHistoryEntryPB input_history = 2;</code>
       */
      public java.util.List<CsUsercmd.CSGOInputHistoryEntryPB.Builder> 
           getInputHistoryBuilderList() {
        return getInputHistoryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          CsUsercmd.CSGOInputHistoryEntryPB, CsUsercmd.CSGOInputHistoryEntryPB.Builder, CsUsercmd.CSGOInputHistoryEntryPBOrBuilder> 
          getInputHistoryFieldBuilder() {
        if (inputHistoryBuilder_ == null) {
          inputHistoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              CsUsercmd.CSGOInputHistoryEntryPB, CsUsercmd.CSGOInputHistoryEntryPB.Builder, CsUsercmd.CSGOInputHistoryEntryPBOrBuilder>(
                  inputHistory_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          inputHistory_ = null;
        }
        return inputHistoryBuilder_;
      }

      private int attack1StartHistoryIndex_ = -1;
      /**
       * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
       * @return Whether the attack1StartHistoryIndex field is set.
       */
      @java.lang.Override
      public boolean hasAttack1StartHistoryIndex() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
       * @return The attack1StartHistoryIndex.
       */
      @java.lang.Override
      public int getAttack1StartHistoryIndex() {
        return attack1StartHistoryIndex_;
      }
      /**
       * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
       * @param value The attack1StartHistoryIndex to set.
       * @return This builder for chaining.
       */
      public Builder setAttack1StartHistoryIndex(int value) {
        bitField0_ |= 0x00000004;
        attack1StartHistoryIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 attack1_start_history_index = 6 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearAttack1StartHistoryIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        attack1StartHistoryIndex_ = -1;
        onChanged();
        return this;
      }

      private int attack2StartHistoryIndex_ = -1;
      /**
       * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
       * @return Whether the attack2StartHistoryIndex field is set.
       */
      @java.lang.Override
      public boolean hasAttack2StartHistoryIndex() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
       * @return The attack2StartHistoryIndex.
       */
      @java.lang.Override
      public int getAttack2StartHistoryIndex() {
        return attack2StartHistoryIndex_;
      }
      /**
       * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
       * @param value The attack2StartHistoryIndex to set.
       * @return This builder for chaining.
       */
      public Builder setAttack2StartHistoryIndex(int value) {
        bitField0_ |= 0x00000008;
        attack2StartHistoryIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 attack2_start_history_index = 7 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearAttack2StartHistoryIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        attack2StartHistoryIndex_ = -1;
        onChanged();
        return this;
      }

      private int attack3StartHistoryIndex_ = -1;
      /**
       * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
       * @return Whether the attack3StartHistoryIndex field is set.
       */
      @java.lang.Override
      public boolean hasAttack3StartHistoryIndex() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
       * @return The attack3StartHistoryIndex.
       */
      @java.lang.Override
      public int getAttack3StartHistoryIndex() {
        return attack3StartHistoryIndex_;
      }
      /**
       * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
       * @param value The attack3StartHistoryIndex to set.
       * @return This builder for chaining.
       */
      public Builder setAttack3StartHistoryIndex(int value) {
        bitField0_ |= 0x00000010;
        attack3StartHistoryIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 attack3_start_history_index = 8 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearAttack3StartHistoryIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        attack3StartHistoryIndex_ = -1;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CSGOUserCmdPB)
    }

    // @@protoc_insertion_point(class_scope:CSGOUserCmdPB)
    private static final CsUsercmd.CSGOUserCmdPB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CsUsercmd.CSGOUserCmdPB();
    }

    public static CsUsercmd.CSGOUserCmdPB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CSGOUserCmdPB>
        PARSER = new com.google.protobuf.AbstractParser<CSGOUserCmdPB>() {
      @java.lang.Override
      public CSGOUserCmdPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSGOUserCmdPB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CSGOUserCmdPB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSGOUserCmdPB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CsUsercmd.CSGOUserCmdPB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSGOInterpolationInfoPB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSGOInterpolationInfoPB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSGOInputHistoryEntryPB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSGOInputHistoryEntryPB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CSGOUserCmdPB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CSGOUserCmdPB_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025csgo/cs_usercmd.proto\032\033csgo/networkbas" +
      "etypes.proto\032\022csgo/usercmd.proto\"V\n\027CSGO" +
      "InterpolationInfoPB\022\024\n\010src_tick\030\001 \001(\005:\002-" +
      "1\022\024\n\010dst_tick\030\002 \001(\005:\002-1\022\017\n\004frac\030\003 \001(\002:\0010" +
      "\"\302\004\n\027CSGOInputHistoryEntryPB\022 \n\013view_ang" +
      "les\030\002 \001(\0132\013.CMsgQAngle\022\031\n\021render_tick_co" +
      "unt\030\004 \001(\005\022\034\n\024render_tick_fraction\030\005 \001(\002\022" +
      "\031\n\021player_tick_count\030\006 \001(\005\022\034\n\024player_tic" +
      "k_fraction\030\007 \001(\002\022+\n\tcl_interp\030\014 \001(\0132\030.CS" +
      "GOInterpolationInfoPB\022,\n\nsv_interp0\030\r \001(" +
      "\0132\030.CSGOInterpolationInfoPB\022,\n\nsv_interp" +
      "1\030\016 \001(\0132\030.CSGOInterpolationInfoPB\022/\n\rpla" +
      "yer_interp\030\017 \001(\0132\030.CSGOInterpolationInfo" +
      "PB\022\024\n\014frame_number\030\024 \001(\005\022\034\n\020target_ent_i" +
      "ndex\030\010 \001(\005:\002-1\022#\n\016shoot_position\030\003 \001(\0132\013" +
      ".CMsgVector\022*\n\025target_head_pos_check\030\t \001" +
      "(\0132\013.CMsgVector\022)\n\024target_abs_pos_check\030" +
      "\n \001(\0132\013.CMsgVector\022)\n\024target_abs_ang_che" +
      "ck\030\013 \001(\0132\013.CMsgQAngle\"\332\001\n\rCSGOUserCmdPB\022" +
      "\035\n\004base\030\001 \001(\0132\017.CBaseUserCmdPB\022/\n\rinput_" +
      "history\030\002 \003(\0132\030.CSGOInputHistoryEntryPB\022" +
      "\'\n\033attack1_start_history_index\030\006 \001(\005:\002-1" +
      "\022\'\n\033attack2_start_history_index\030\007 \001(\005:\002-" +
      "1\022\'\n\033attack3_start_history_index\030\010 \001(\005:\002" +
      "-1"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Networkbasetypes.getDescriptor(),
          Usercmd.getDescriptor(),
        });
    internal_static_CSGOInterpolationInfoPB_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CSGOInterpolationInfoPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSGOInterpolationInfoPB_descriptor,
        new java.lang.String[] { "SrcTick", "DstTick", "Frac", });
    internal_static_CSGOInputHistoryEntryPB_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CSGOInputHistoryEntryPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSGOInputHistoryEntryPB_descriptor,
        new java.lang.String[] { "ViewAngles", "RenderTickCount", "RenderTickFraction", "PlayerTickCount", "PlayerTickFraction", "ClInterp", "SvInterp0", "SvInterp1", "PlayerInterp", "FrameNumber", "TargetEntIndex", "ShootPosition", "TargetHeadPosCheck", "TargetAbsPosCheck", "TargetAbsAngCheck", });
    internal_static_CSGOUserCmdPB_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CSGOUserCmdPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CSGOUserCmdPB_descriptor,
        new java.lang.String[] { "Base", "InputHistory", "Attack1StartHistoryIndex", "Attack2StartHistoryIndex", "Attack3StartHistoryIndex", });
    Networkbasetypes.getDescriptor();
    Usercmd.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

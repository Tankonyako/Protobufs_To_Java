package in.dragonbra.javasteam.protobufs.csgo;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csgo/uifontfile_format.proto

public final class UifontfileFormat {
  private UifontfileFormat() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CUIFontFilePBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CUIFontFilePB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string font_file_name = 1;</code>
     * @return Whether the fontFileName field is set.
     */
    boolean hasFontFileName();
    /**
     * <code>optional string font_file_name = 1;</code>
     * @return The fontFileName.
     */
    java.lang.String getFontFileName();
    /**
     * <code>optional string font_file_name = 1;</code>
     * @return The bytes for fontFileName.
     */
    com.google.protobuf.ByteString
        getFontFileNameBytes();

    /**
     * <code>optional bytes opentype_font_data = 2;</code>
     * @return Whether the opentypeFontData field is set.
     */
    boolean hasOpentypeFontData();
    /**
     * <code>optional bytes opentype_font_data = 2;</code>
     * @return The opentypeFontData.
     */
    com.google.protobuf.ByteString getOpentypeFontData();
  }
  /**
   * Protobuf type {@code CUIFontFilePB}
   */
  public static final class CUIFontFilePB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CUIFontFilePB)
      CUIFontFilePBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CUIFontFilePB.newBuilder() to construct.
    private CUIFontFilePB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CUIFontFilePB() {
      fontFileName_ = "";
      opentypeFontData_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CUIFontFilePB();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CUIFontFilePB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              fontFileName_ = bs;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              opentypeFontData_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return UifontfileFormat.internal_static_CUIFontFilePB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return UifontfileFormat.internal_static_CUIFontFilePB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UifontfileFormat.CUIFontFilePB.class, UifontfileFormat.CUIFontFilePB.Builder.class);
    }

    private int bitField0_;
    public static final int FONT_FILE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object fontFileName_;
    /**
     * <code>optional string font_file_name = 1;</code>
     * @return Whether the fontFileName field is set.
     */
    @java.lang.Override
    public boolean hasFontFileName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string font_file_name = 1;</code>
     * @return The fontFileName.
     */
    @java.lang.Override
    public java.lang.String getFontFileName() {
      java.lang.Object ref = fontFileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fontFileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string font_file_name = 1;</code>
     * @return The bytes for fontFileName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFontFileNameBytes() {
      java.lang.Object ref = fontFileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fontFileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPENTYPE_FONT_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString opentypeFontData_;
    /**
     * <code>optional bytes opentype_font_data = 2;</code>
     * @return Whether the opentypeFontData field is set.
     */
    @java.lang.Override
    public boolean hasOpentypeFontData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bytes opentype_font_data = 2;</code>
     * @return The opentypeFontData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOpentypeFontData() {
      return opentypeFontData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, fontFileName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, opentypeFontData_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, fontFileName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, opentypeFontData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UifontfileFormat.CUIFontFilePB)) {
        return super.equals(obj);
      }
      UifontfileFormat.CUIFontFilePB other = (UifontfileFormat.CUIFontFilePB) obj;

      if (hasFontFileName() != other.hasFontFileName()) return false;
      if (hasFontFileName()) {
        if (!getFontFileName()
            .equals(other.getFontFileName())) return false;
      }
      if (hasOpentypeFontData() != other.hasOpentypeFontData()) return false;
      if (hasOpentypeFontData()) {
        if (!getOpentypeFontData()
            .equals(other.getOpentypeFontData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFontFileName()) {
        hash = (37 * hash) + FONT_FILE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFontFileName().hashCode();
      }
      if (hasOpentypeFontData()) {
        hash = (37 * hash) + OPENTYPE_FONT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getOpentypeFontData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UifontfileFormat.CUIFontFilePB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UifontfileFormat.CUIFontFilePB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UifontfileFormat.CUIFontFilePB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UifontfileFormat.CUIFontFilePB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CUIFontFilePB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CUIFontFilePB)
        UifontfileFormat.CUIFontFilePBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return UifontfileFormat.internal_static_CUIFontFilePB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return UifontfileFormat.internal_static_CUIFontFilePB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UifontfileFormat.CUIFontFilePB.class, UifontfileFormat.CUIFontFilePB.Builder.class);
      }

      // Construct using UifontfileFormat.CUIFontFilePB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fontFileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        opentypeFontData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return UifontfileFormat.internal_static_CUIFontFilePB_descriptor;
      }

      @java.lang.Override
      public UifontfileFormat.CUIFontFilePB getDefaultInstanceForType() {
        return UifontfileFormat.CUIFontFilePB.getDefaultInstance();
      }

      @java.lang.Override
      public UifontfileFormat.CUIFontFilePB build() {
        UifontfileFormat.CUIFontFilePB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public UifontfileFormat.CUIFontFilePB buildPartial() {
        UifontfileFormat.CUIFontFilePB result = new UifontfileFormat.CUIFontFilePB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fontFileName_ = fontFileName_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.opentypeFontData_ = opentypeFontData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UifontfileFormat.CUIFontFilePB) {
          return mergeFrom((UifontfileFormat.CUIFontFilePB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UifontfileFormat.CUIFontFilePB other) {
        if (other == UifontfileFormat.CUIFontFilePB.getDefaultInstance()) return this;
        if (other.hasFontFileName()) {
          bitField0_ |= 0x00000001;
          fontFileName_ = other.fontFileName_;
          onChanged();
        }
        if (other.hasOpentypeFontData()) {
          setOpentypeFontData(other.getOpentypeFontData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UifontfileFormat.CUIFontFilePB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UifontfileFormat.CUIFontFilePB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object fontFileName_ = "";
      /**
       * <code>optional string font_file_name = 1;</code>
       * @return Whether the fontFileName field is set.
       */
      public boolean hasFontFileName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string font_file_name = 1;</code>
       * @return The fontFileName.
       */
      public java.lang.String getFontFileName() {
        java.lang.Object ref = fontFileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fontFileName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string font_file_name = 1;</code>
       * @return The bytes for fontFileName.
       */
      public com.google.protobuf.ByteString
          getFontFileNameBytes() {
        java.lang.Object ref = fontFileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fontFileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string font_file_name = 1;</code>
       * @param value The fontFileName to set.
       * @return This builder for chaining.
       */
      public Builder setFontFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fontFileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string font_file_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFontFileName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fontFileName_ = getDefaultInstance().getFontFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string font_file_name = 1;</code>
       * @param value The bytes for fontFileName to set.
       * @return This builder for chaining.
       */
      public Builder setFontFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fontFileName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString opentypeFontData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes opentype_font_data = 2;</code>
       * @return Whether the opentypeFontData field is set.
       */
      @java.lang.Override
      public boolean hasOpentypeFontData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bytes opentype_font_data = 2;</code>
       * @return The opentypeFontData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getOpentypeFontData() {
        return opentypeFontData_;
      }
      /**
       * <code>optional bytes opentype_font_data = 2;</code>
       * @param value The opentypeFontData to set.
       * @return This builder for chaining.
       */
      public Builder setOpentypeFontData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        opentypeFontData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes opentype_font_data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpentypeFontData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        opentypeFontData_ = getDefaultInstance().getOpentypeFontData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CUIFontFilePB)
    }

    // @@protoc_insertion_point(class_scope:CUIFontFilePB)
    private static final UifontfileFormat.CUIFontFilePB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UifontfileFormat.CUIFontFilePB();
    }

    public static UifontfileFormat.CUIFontFilePB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CUIFontFilePB>
        PARSER = new com.google.protobuf.AbstractParser<CUIFontFilePB>() {
      @java.lang.Override
      public CUIFontFilePB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CUIFontFilePB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CUIFontFilePB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CUIFontFilePB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public UifontfileFormat.CUIFontFilePB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CUIFontFilePackagePBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CUIFontFilePackagePB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 package_version = 1;</code>
     * @return Whether the packageVersion field is set.
     */
    boolean hasPackageVersion();
    /**
     * <code>required uint32 package_version = 1;</code>
     * @return The packageVersion.
     */
    int getPackageVersion();

    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    java.util.List<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB> 
        getEncryptedFontFilesList();
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB getEncryptedFontFiles(int index);
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    int getEncryptedFontFilesCount();
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    java.util.List<? extends UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder> 
        getEncryptedFontFilesOrBuilderList();
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder getEncryptedFontFilesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CUIFontFilePackagePB}
   */
  public static final class CUIFontFilePackagePB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CUIFontFilePackagePB)
      CUIFontFilePackagePBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CUIFontFilePackagePB.newBuilder() to construct.
    private CUIFontFilePackagePB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CUIFontFilePackagePB() {
      encryptedFontFiles_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CUIFontFilePackagePB();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CUIFontFilePackagePB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              packageVersion_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                encryptedFontFiles_ = new java.util.ArrayList<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB>();
                mutable_bitField0_ |= 0x00000002;
              }
              encryptedFontFiles_.add(
                  input.readMessage(UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          encryptedFontFiles_ = java.util.Collections.unmodifiableList(encryptedFontFiles_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return UifontfileFormat.internal_static_CUIFontFilePackagePB_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return UifontfileFormat.internal_static_CUIFontFilePackagePB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UifontfileFormat.CUIFontFilePackagePB.class, UifontfileFormat.CUIFontFilePackagePB.Builder.class);
    }

    public interface CUIEncryptedFontFilePBOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CUIFontFilePackagePB.CUIEncryptedFontFilePB)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bytes encrypted_contents = 1;</code>
       * @return Whether the encryptedContents field is set.
       */
      boolean hasEncryptedContents();
      /**
       * <code>optional bytes encrypted_contents = 1;</code>
       * @return The encryptedContents.
       */
      com.google.protobuf.ByteString getEncryptedContents();
    }
    /**
     * Protobuf type {@code CUIFontFilePackagePB.CUIEncryptedFontFilePB}
     */
    public static final class CUIEncryptedFontFilePB extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:CUIFontFilePackagePB.CUIEncryptedFontFilePB)
        CUIEncryptedFontFilePBOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CUIEncryptedFontFilePB.newBuilder() to construct.
      private CUIEncryptedFontFilePB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CUIEncryptedFontFilePB() {
        encryptedContents_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CUIEncryptedFontFilePB();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CUIEncryptedFontFilePB(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                bitField0_ |= 0x00000001;
                encryptedContents_ = input.readBytes();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return UifontfileFormat.internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return UifontfileFormat.internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.class, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder.class);
      }

      private int bitField0_;
      public static final int ENCRYPTED_CONTENTS_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString encryptedContents_;
      /**
       * <code>optional bytes encrypted_contents = 1;</code>
       * @return Whether the encryptedContents field is set.
       */
      @java.lang.Override
      public boolean hasEncryptedContents() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bytes encrypted_contents = 1;</code>
       * @return The encryptedContents.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncryptedContents() {
        return encryptedContents_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBytes(1, encryptedContents_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, encryptedContents_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB)) {
          return super.equals(obj);
        }
        UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB other = (UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB) obj;

        if (hasEncryptedContents() != other.hasEncryptedContents()) return false;
        if (hasEncryptedContents()) {
          if (!getEncryptedContents()
              .equals(other.getEncryptedContents())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasEncryptedContents()) {
          hash = (37 * hash) + ENCRYPTED_CONTENTS_FIELD_NUMBER;
          hash = (53 * hash) + getEncryptedContents().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CUIFontFilePackagePB.CUIEncryptedFontFilePB}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CUIFontFilePackagePB.CUIEncryptedFontFilePB)
          UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return UifontfileFormat.internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return UifontfileFormat.internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.class, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder.class);
        }

        // Construct using UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          encryptedContents_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return UifontfileFormat.internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_descriptor;
        }

        @java.lang.Override
        public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB getDefaultInstanceForType() {
          return UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.getDefaultInstance();
        }

        @java.lang.Override
        public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB build() {
          UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB buildPartial() {
          UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB result = new UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.encryptedContents_ = encryptedContents_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB) {
            return mergeFrom((UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB other) {
          if (other == UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.getDefaultInstance()) return this;
          if (other.hasEncryptedContents()) {
            setEncryptedContents(other.getEncryptedContents());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString encryptedContents_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes encrypted_contents = 1;</code>
         * @return Whether the encryptedContents field is set.
         */
        @java.lang.Override
        public boolean hasEncryptedContents() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional bytes encrypted_contents = 1;</code>
         * @return The encryptedContents.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getEncryptedContents() {
          return encryptedContents_;
        }
        /**
         * <code>optional bytes encrypted_contents = 1;</code>
         * @param value The encryptedContents to set.
         * @return This builder for chaining.
         */
        public Builder setEncryptedContents(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          encryptedContents_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes encrypted_contents = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearEncryptedContents() {
          bitField0_ = (bitField0_ & ~0x00000001);
          encryptedContents_ = getDefaultInstance().getEncryptedContents();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:CUIFontFilePackagePB.CUIEncryptedFontFilePB)
      }

      // @@protoc_insertion_point(class_scope:CUIFontFilePackagePB.CUIEncryptedFontFilePB)
      private static final UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB();
      }

      public static UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CUIEncryptedFontFilePB>
          PARSER = new com.google.protobuf.AbstractParser<CUIEncryptedFontFilePB>() {
        @java.lang.Override
        public CUIEncryptedFontFilePB parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CUIEncryptedFontFilePB(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CUIEncryptedFontFilePB> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CUIEncryptedFontFilePB> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int PACKAGE_VERSION_FIELD_NUMBER = 1;
    private int packageVersion_;
    /**
     * <code>required uint32 package_version = 1;</code>
     * @return Whether the packageVersion field is set.
     */
    @java.lang.Override
    public boolean hasPackageVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required uint32 package_version = 1;</code>
     * @return The packageVersion.
     */
    @java.lang.Override
    public int getPackageVersion() {
      return packageVersion_;
    }

    public static final int ENCRYPTED_FONT_FILES_FIELD_NUMBER = 2;
    private java.util.List<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB> encryptedFontFiles_;
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    @java.lang.Override
    public java.util.List<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB> getEncryptedFontFilesList() {
      return encryptedFontFiles_;
    }
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder> 
        getEncryptedFontFilesOrBuilderList() {
      return encryptedFontFiles_;
    }
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    @java.lang.Override
    public int getEncryptedFontFilesCount() {
      return encryptedFontFiles_.size();
    }
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    @java.lang.Override
    public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB getEncryptedFontFiles(int index) {
      return encryptedFontFiles_.get(index);
    }
    /**
     * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
     */
    @java.lang.Override
    public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder getEncryptedFontFilesOrBuilder(
        int index) {
      return encryptedFontFiles_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPackageVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, packageVersion_);
      }
      for (int i = 0; i < encryptedFontFiles_.size(); i++) {
        output.writeMessage(2, encryptedFontFiles_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, packageVersion_);
      }
      for (int i = 0; i < encryptedFontFiles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, encryptedFontFiles_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UifontfileFormat.CUIFontFilePackagePB)) {
        return super.equals(obj);
      }
      UifontfileFormat.CUIFontFilePackagePB other = (UifontfileFormat.CUIFontFilePackagePB) obj;

      if (hasPackageVersion() != other.hasPackageVersion()) return false;
      if (hasPackageVersion()) {
        if (getPackageVersion()
            != other.getPackageVersion()) return false;
      }
      if (!getEncryptedFontFilesList()
          .equals(other.getEncryptedFontFilesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPackageVersion()) {
        hash = (37 * hash) + PACKAGE_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getPackageVersion();
      }
      if (getEncryptedFontFilesCount() > 0) {
        hash = (37 * hash) + ENCRYPTED_FONT_FILES_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptedFontFilesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UifontfileFormat.CUIFontFilePackagePB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UifontfileFormat.CUIFontFilePackagePB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CUIFontFilePackagePB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CUIFontFilePackagePB)
        UifontfileFormat.CUIFontFilePackagePBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return UifontfileFormat.internal_static_CUIFontFilePackagePB_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return UifontfileFormat.internal_static_CUIFontFilePackagePB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UifontfileFormat.CUIFontFilePackagePB.class, UifontfileFormat.CUIFontFilePackagePB.Builder.class);
      }

      // Construct using UifontfileFormat.CUIFontFilePackagePB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEncryptedFontFilesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        packageVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (encryptedFontFilesBuilder_ == null) {
          encryptedFontFiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          encryptedFontFilesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return UifontfileFormat.internal_static_CUIFontFilePackagePB_descriptor;
      }

      @java.lang.Override
      public UifontfileFormat.CUIFontFilePackagePB getDefaultInstanceForType() {
        return UifontfileFormat.CUIFontFilePackagePB.getDefaultInstance();
      }

      @java.lang.Override
      public UifontfileFormat.CUIFontFilePackagePB build() {
        UifontfileFormat.CUIFontFilePackagePB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public UifontfileFormat.CUIFontFilePackagePB buildPartial() {
        UifontfileFormat.CUIFontFilePackagePB result = new UifontfileFormat.CUIFontFilePackagePB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.packageVersion_ = packageVersion_;
          to_bitField0_ |= 0x00000001;
        }
        if (encryptedFontFilesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            encryptedFontFiles_ = java.util.Collections.unmodifiableList(encryptedFontFiles_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.encryptedFontFiles_ = encryptedFontFiles_;
        } else {
          result.encryptedFontFiles_ = encryptedFontFilesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UifontfileFormat.CUIFontFilePackagePB) {
          return mergeFrom((UifontfileFormat.CUIFontFilePackagePB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UifontfileFormat.CUIFontFilePackagePB other) {
        if (other == UifontfileFormat.CUIFontFilePackagePB.getDefaultInstance()) return this;
        if (other.hasPackageVersion()) {
          setPackageVersion(other.getPackageVersion());
        }
        if (encryptedFontFilesBuilder_ == null) {
          if (!other.encryptedFontFiles_.isEmpty()) {
            if (encryptedFontFiles_.isEmpty()) {
              encryptedFontFiles_ = other.encryptedFontFiles_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEncryptedFontFilesIsMutable();
              encryptedFontFiles_.addAll(other.encryptedFontFiles_);
            }
            onChanged();
          }
        } else {
          if (!other.encryptedFontFiles_.isEmpty()) {
            if (encryptedFontFilesBuilder_.isEmpty()) {
              encryptedFontFilesBuilder_.dispose();
              encryptedFontFilesBuilder_ = null;
              encryptedFontFiles_ = other.encryptedFontFiles_;
              bitField0_ = (bitField0_ & ~0x00000002);
              encryptedFontFilesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEncryptedFontFilesFieldBuilder() : null;
            } else {
              encryptedFontFilesBuilder_.addAllMessages(other.encryptedFontFiles_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasPackageVersion()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UifontfileFormat.CUIFontFilePackagePB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UifontfileFormat.CUIFontFilePackagePB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int packageVersion_ ;
      /**
       * <code>required uint32 package_version = 1;</code>
       * @return Whether the packageVersion field is set.
       */
      @java.lang.Override
      public boolean hasPackageVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required uint32 package_version = 1;</code>
       * @return The packageVersion.
       */
      @java.lang.Override
      public int getPackageVersion() {
        return packageVersion_;
      }
      /**
       * <code>required uint32 package_version = 1;</code>
       * @param value The packageVersion to set.
       * @return This builder for chaining.
       */
      public Builder setPackageVersion(int value) {
        bitField0_ |= 0x00000001;
        packageVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 package_version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPackageVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packageVersion_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB> encryptedFontFiles_ =
        java.util.Collections.emptyList();
      private void ensureEncryptedFontFilesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          encryptedFontFiles_ = new java.util.ArrayList<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB>(encryptedFontFiles_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder> encryptedFontFilesBuilder_;

      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public java.util.List<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB> getEncryptedFontFilesList() {
        if (encryptedFontFilesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(encryptedFontFiles_);
        } else {
          return encryptedFontFilesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public int getEncryptedFontFilesCount() {
        if (encryptedFontFilesBuilder_ == null) {
          return encryptedFontFiles_.size();
        } else {
          return encryptedFontFilesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB getEncryptedFontFiles(int index) {
        if (encryptedFontFilesBuilder_ == null) {
          return encryptedFontFiles_.get(index);
        } else {
          return encryptedFontFilesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder setEncryptedFontFiles(
          int index, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB value) {
        if (encryptedFontFilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedFontFilesIsMutable();
          encryptedFontFiles_.set(index, value);
          onChanged();
        } else {
          encryptedFontFilesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder setEncryptedFontFiles(
          int index, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder builderForValue) {
        if (encryptedFontFilesBuilder_ == null) {
          ensureEncryptedFontFilesIsMutable();
          encryptedFontFiles_.set(index, builderForValue.build());
          onChanged();
        } else {
          encryptedFontFilesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder addEncryptedFontFiles(UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB value) {
        if (encryptedFontFilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedFontFilesIsMutable();
          encryptedFontFiles_.add(value);
          onChanged();
        } else {
          encryptedFontFilesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder addEncryptedFontFiles(
          int index, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB value) {
        if (encryptedFontFilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedFontFilesIsMutable();
          encryptedFontFiles_.add(index, value);
          onChanged();
        } else {
          encryptedFontFilesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder addEncryptedFontFiles(
          UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder builderForValue) {
        if (encryptedFontFilesBuilder_ == null) {
          ensureEncryptedFontFilesIsMutable();
          encryptedFontFiles_.add(builderForValue.build());
          onChanged();
        } else {
          encryptedFontFilesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder addEncryptedFontFiles(
          int index, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder builderForValue) {
        if (encryptedFontFilesBuilder_ == null) {
          ensureEncryptedFontFilesIsMutable();
          encryptedFontFiles_.add(index, builderForValue.build());
          onChanged();
        } else {
          encryptedFontFilesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder addAllEncryptedFontFiles(
          java.lang.Iterable<? extends UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB> values) {
        if (encryptedFontFilesBuilder_ == null) {
          ensureEncryptedFontFilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, encryptedFontFiles_);
          onChanged();
        } else {
          encryptedFontFilesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder clearEncryptedFontFiles() {
        if (encryptedFontFilesBuilder_ == null) {
          encryptedFontFiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          encryptedFontFilesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public Builder removeEncryptedFontFiles(int index) {
        if (encryptedFontFilesBuilder_ == null) {
          ensureEncryptedFontFilesIsMutable();
          encryptedFontFiles_.remove(index);
          onChanged();
        } else {
          encryptedFontFilesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder getEncryptedFontFilesBuilder(
          int index) {
        return getEncryptedFontFilesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder getEncryptedFontFilesOrBuilder(
          int index) {
        if (encryptedFontFilesBuilder_ == null) {
          return encryptedFontFiles_.get(index);  } else {
          return encryptedFontFilesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public java.util.List<? extends UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder> 
           getEncryptedFontFilesOrBuilderList() {
        if (encryptedFontFilesBuilder_ != null) {
          return encryptedFontFilesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(encryptedFontFiles_);
        }
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder addEncryptedFontFilesBuilder() {
        return getEncryptedFontFilesFieldBuilder().addBuilder(
            UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.getDefaultInstance());
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder addEncryptedFontFilesBuilder(
          int index) {
        return getEncryptedFontFilesFieldBuilder().addBuilder(
            index, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.getDefaultInstance());
      }
      /**
       * <code>repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;</code>
       */
      public java.util.List<UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder> 
           getEncryptedFontFilesBuilderList() {
        return getEncryptedFontFilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder> 
          getEncryptedFontFilesFieldBuilder() {
        if (encryptedFontFilesBuilder_ == null) {
          encryptedFontFilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePB.Builder, UifontfileFormat.CUIFontFilePackagePB.CUIEncryptedFontFilePBOrBuilder>(
                  encryptedFontFiles_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          encryptedFontFiles_ = null;
        }
        return encryptedFontFilesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CUIFontFilePackagePB)
    }

    // @@protoc_insertion_point(class_scope:CUIFontFilePackagePB)
    private static final UifontfileFormat.CUIFontFilePackagePB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UifontfileFormat.CUIFontFilePackagePB();
    }

    public static UifontfileFormat.CUIFontFilePackagePB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CUIFontFilePackagePB>
        PARSER = new com.google.protobuf.AbstractParser<CUIFontFilePackagePB>() {
      @java.lang.Override
      public CUIFontFilePackagePB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CUIFontFilePackagePB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CUIFontFilePackagePB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CUIFontFilePackagePB> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public UifontfileFormat.CUIFontFilePackagePB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CUIFontFilePB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CUIFontFilePB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CUIFontFilePackagePB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CUIFontFilePackagePB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034csgo/uifontfile_format.proto\"C\n\rCUIFon" +
      "tFilePB\022\026\n\016font_file_name\030\001 \001(\t\022\032\n\022opent" +
      "ype_font_data\030\002 \001(\014\"\261\001\n\024CUIFontFilePacka" +
      "gePB\022\027\n\017package_version\030\001 \002(\r\022J\n\024encrypt" +
      "ed_font_files\030\002 \003(\0132,.CUIFontFilePackage" +
      "PB.CUIEncryptedFontFilePB\0324\n\026CUIEncrypte" +
      "dFontFilePB\022\032\n\022encrypted_contents\030\001 \001(\014"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_CUIFontFilePB_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CUIFontFilePB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CUIFontFilePB_descriptor,
        new java.lang.String[] { "FontFileName", "OpentypeFontData", });
    internal_static_CUIFontFilePackagePB_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CUIFontFilePackagePB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CUIFontFilePackagePB_descriptor,
        new java.lang.String[] { "PackageVersion", "EncryptedFontFiles", });
    internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_descriptor =
      internal_static_CUIFontFilePackagePB_descriptor.getNestedTypes().get(0);
    internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CUIFontFilePackagePB_CUIEncryptedFontFilePB_descriptor,
        new java.lang.String[] { "EncryptedContents", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}

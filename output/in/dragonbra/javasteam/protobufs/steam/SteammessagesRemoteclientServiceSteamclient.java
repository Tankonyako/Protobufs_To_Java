package in.dragonbra.javasteam.protobufs.steam;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steam/steammessages_remoteclient_service.steamclient.proto

public final class SteammessagesRemoteclientServiceSteamclient {
  private SteammessagesRemoteclientServiceSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:steam/steammessages_remoteclient_servi" +
      "ce.steamclient.proto\032\036steam/steammessage" +
      "s_base.proto\0322steam/steammessages_unifie" +
      "d_base.steamclient.proto\0327steam/steammes" +
      "sages_remoteclient_service_messages.prot" +
      "o2\312\016\n\014RemoteClient\022\210\001\n\016GetPairingInfo\022%." +
      "CRemoteClient_GetPairingInfo_Request\032&.C" +
      "RemoteClient_GetPairingInfo_Response\"\'\202\265" +
      "\030#Get pairing info for an entered PIN\022~\n" +
      "\014NotifyOnline\022\".CRemoteClient_Online_Not" +
      "ification\032\013.NoResponse\"=\202\265\0309Let the serv" +
      "ice know we\'re available for status list" +
      "eners\022n\n\021NotifyReplyPacket\022\'.CRemoteClie" +
      "nt_ReplyPacket_Notification\032\013.NoResponse" +
      "\"#\202\265\030\037Send a reply to a remote client\022\247\001" +
      "\n\023AllocateRelayServer\022*.CRemoteClient_Al" +
      "locateRelayServer_Request\032+.CRemoteClien" +
      "t_AllocateRelayServer_Response\"7\202\265\0303Allo" +
      "cate a UDP relay server for a streaming " +
      "session\022}\n\013AllocateSDR\022\".CRemoteClient_A" +
      "llocateSDR_Request\032#.CRemoteClient_Alloc" +
      "ateSDR_Response\"%\202\265\030!Allocate SDR resour" +
      "ces for an app\022\203\001\n\030SendSteamBroadcastPac" +
      "ket\022*.CRemoteClient_SteamBroadcast_Notif" +
      "ication\032\013.NoResponse\".\202\265\030*Broadcast a pa" +
      "cket to remote Steam clients\022{\n\026SendStea" +
      "mToSteamPacket\022(.CRemoteClient_SteamToSt" +
      "eam_Notification\032\013.NoResponse\"*\202\265\030&Send " +
      "a packet to a remote Steam client\022\250\001\n\034Se" +
      "ndRemotePlaySessionStarted\022#.CRemotePlay" +
      "_SessionStarted_Request\032$.CRemotePlay_Se" +
      "ssionStarted_Response\"=\202\265\0309Let the serve" +
      "r know that we started a Remote Play ses" +
      "sion\022\224\001\n\034SendRemotePlaySessionStopped\022(." +
      "CRemotePlay_SessionStopped_Notification\032" +
      "\013.NoResponse\"=\202\265\0309Let the server know th" +
      "at we stopped a Remote Play session\022\210\001\n\034" +
      "SendRemotePlayTogetherPacket\022!.CRemotePl" +
      "ayTogether_Notification\032\013.NoResponse\"8\202\265" +
      "\0304Send a Remote Play Together packet to " +
      "a Steam client\022\311\001\n\"CreateRemotePlayToget" +
      "herInvitation\0229.CRemoteClient_CreateRemo" +
      "tePlayTogetherInvitation_Request\032:.CRemo" +
      "teClient_CreateRemotePlayTogetherInvitat" +
      "ion_Response\",\202\265\030(Create a Remote Play T" +
      "ogether invitation\022\311\001\n\"DeleteRemotePlayT" +
      "ogetherInvitation\0229.CRemoteClient_Delete" +
      "RemotePlayTogetherInvitation_Request\032:.C" +
      "RemoteClient_DeleteRemotePlayTogetherInv" +
      "itation_Response\",\202\265\030(Delete a Remote Pl" +
      "ay Together invitation\032.\202\265\030*Methods for " +
      "Steam remote client operations2\224\007\n\027Remot" +
      "eClientSteamClient\022\220\001\n\032NotifyRegisterSta" +
      "tusUpdate\0220.CRemoteClient_RegisterStatus" +
      "Update_Notification\032\013.NoResponse\"3\202\265\030/Re" +
      "gister for status updates with a Steam c" +
      "lient\022\226\001\n\034NotifyUnregisterStatusUpdate\0222" +
      ".CRemoteClient_UnregisterStatusUpdate_No" +
      "tification\032\013.NoResponse\"5\202\265\0301Unregister " +
      "for status updates with a Steam client\022p" +
      "\n\022NotifyRemotePacket\022(.CRemoteClient_Rem" +
      "otePacket_Notification\032\013.NoResponse\"#\202\265\030" +
      "\037Send a packet to a Steam client\022\205\001\n\032Not" +
      "ifySteamBroadcastPacket\022*.CRemoteClient_" +
      "SteamBroadcast_Notification\032\013.NoResponse" +
      "\".\202\265\030*Broadcast a packet to remote Steam" +
      " clients\022\221\001\n\030NotifySteamToSteamPacket\022(." +
      "CRemoteClient_SteamToSteam_Notification\032" +
      "\013.NoResponse\">\202\265\030:Send a packet to a Ste" +
      "am client from a remote Steam client\022\212\001\n" +
      "\036NotifyRemotePlayTogetherPacket\022!.CRemot" +
      "ePlayTogether_Notification\032\013.NoResponse\"" +
      "8\202\265\0304Send a Remote Play Together packet " +
      "to a Steam client\0322\202\265\030*Methods for Steam" +
      " remote client operations\300\265\030\002B\003\200\001\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesBase.getDescriptor(),
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
          SteammessagesRemoteclientServiceMessages.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceExecutionSite);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesBase.getDescriptor();
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
    SteammessagesRemoteclientServiceMessages.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

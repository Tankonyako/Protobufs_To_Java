package in.dragonbra.javasteam.protobufs.steam;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steam/steammessages_lobbymatchmaking.steamclient.proto

public final class SteammessagesLobbymatchmakingSteamclient {
  private SteammessagesLobbymatchmakingSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code ELobbyStatus}
   */
  public enum ELobbyStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ELobbyStatusInvalid = 0;</code>
     */
    k_ELobbyStatusInvalid(0),
    /**
     * <code>k_ELobbyStatusExists = 1;</code>
     */
    k_ELobbyStatusExists(1),
    /**
     * <code>k_ELobbyStatusDoesNotExist = 2;</code>
     */
    k_ELobbyStatusDoesNotExist(2),
    /**
     * <code>k_ELobbyStatusNotAMember = 3;</code>
     */
    k_ELobbyStatusNotAMember(3),
    ;

    /**
     * <code>k_ELobbyStatusInvalid = 0;</code>
     */
    public static final int k_ELobbyStatusInvalid_VALUE = 0;
    /**
     * <code>k_ELobbyStatusExists = 1;</code>
     */
    public static final int k_ELobbyStatusExists_VALUE = 1;
    /**
     * <code>k_ELobbyStatusDoesNotExist = 2;</code>
     */
    public static final int k_ELobbyStatusDoesNotExist_VALUE = 2;
    /**
     * <code>k_ELobbyStatusNotAMember = 3;</code>
     */
    public static final int k_ELobbyStatusNotAMember_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELobbyStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELobbyStatus forNumber(int value) {
      switch (value) {
        case 0: return k_ELobbyStatusInvalid;
        case 1: return k_ELobbyStatusExists;
        case 2: return k_ELobbyStatusDoesNotExist;
        case 3: return k_ELobbyStatusNotAMember;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELobbyStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELobbyStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELobbyStatus>() {
            public ELobbyStatus findValueByNumber(int number) {
              return ELobbyStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SteammessagesLobbymatchmakingSteamclient.getDescriptor().getEnumTypes().get(0);
    }

    private static final ELobbyStatus[] VALUES = values();

    public static ELobbyStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELobbyStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ELobbyStatus)
  }

  public interface LobbyMatchmakingLegacy_GetLobbyStatus_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LobbyMatchmakingLegacy_GetLobbyStatus_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    boolean hasAppId();
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    int getAppId();

    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    boolean hasSteamidLobby();
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    long getSteamidLobby();

    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return Whether the claimOwnership field is set.
     */
    boolean hasClaimOwnership();
    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return The claimOwnership.
     */
    boolean getClaimOwnership();

    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return Whether the claimMembership field is set.
     */
    boolean hasClaimMembership();
    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return The claimMembership.
     */
    boolean getClaimMembership();

    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return Whether the versionNum field is set.
     */
    boolean hasVersionNum();
    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return The versionNum.
     */
    int getVersionNum();
  }
  /**
   * Protobuf type {@code LobbyMatchmakingLegacy_GetLobbyStatus_Request}
   */
  public static final class LobbyMatchmakingLegacy_GetLobbyStatus_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LobbyMatchmakingLegacy_GetLobbyStatus_Request)
      LobbyMatchmakingLegacy_GetLobbyStatus_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LobbyMatchmakingLegacy_GetLobbyStatus_Request.newBuilder() to construct.
    private LobbyMatchmakingLegacy_GetLobbyStatus_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LobbyMatchmakingLegacy_GetLobbyStatus_Request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LobbyMatchmakingLegacy_GetLobbyStatus_Request();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LobbyMatchmakingLegacy_GetLobbyStatus_Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              appId_ = input.readUInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              steamidLobby_ = input.readFixed64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              claimOwnership_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              claimMembership_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              versionNum_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request.class, SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request.Builder.class);
    }

    private int bitField0_;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private int appId_;
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    @java.lang.Override
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    @java.lang.Override
    public int getAppId() {
      return appId_;
    }

    public static final int STEAMID_LOBBY_FIELD_NUMBER = 2;
    private long steamidLobby_;
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    @java.lang.Override
    public boolean hasSteamidLobby() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    @java.lang.Override
    public long getSteamidLobby() {
      return steamidLobby_;
    }

    public static final int CLAIM_OWNERSHIP_FIELD_NUMBER = 3;
    private boolean claimOwnership_;
    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return Whether the claimOwnership field is set.
     */
    @java.lang.Override
    public boolean hasClaimOwnership() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return The claimOwnership.
     */
    @java.lang.Override
    public boolean getClaimOwnership() {
      return claimOwnership_;
    }

    public static final int CLAIM_MEMBERSHIP_FIELD_NUMBER = 4;
    private boolean claimMembership_;
    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return Whether the claimMembership field is set.
     */
    @java.lang.Override
    public boolean hasClaimMembership() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return The claimMembership.
     */
    @java.lang.Override
    public boolean getClaimMembership() {
      return claimMembership_;
    }

    public static final int VERSION_NUM_FIELD_NUMBER = 5;
    private int versionNum_;
    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return Whether the versionNum field is set.
     */
    @java.lang.Override
    public boolean hasVersionNum() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return The versionNum.
     */
    @java.lang.Override
    public int getVersionNum() {
      return versionNum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, claimOwnership_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, claimMembership_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, versionNum_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, claimOwnership_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, claimMembership_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, versionNum_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request)) {
        return super.equals(obj);
      }
      SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request other = (SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request) obj;

      if (hasAppId() != other.hasAppId()) return false;
      if (hasAppId()) {
        if (getAppId()
            != other.getAppId()) return false;
      }
      if (hasSteamidLobby() != other.hasSteamidLobby()) return false;
      if (hasSteamidLobby()) {
        if (getSteamidLobby()
            != other.getSteamidLobby()) return false;
      }
      if (hasClaimOwnership() != other.hasClaimOwnership()) return false;
      if (hasClaimOwnership()) {
        if (getClaimOwnership()
            != other.getClaimOwnership()) return false;
      }
      if (hasClaimMembership() != other.hasClaimMembership()) return false;
      if (hasClaimMembership()) {
        if (getClaimMembership()
            != other.getClaimMembership()) return false;
      }
      if (hasVersionNum() != other.hasVersionNum()) return false;
      if (hasVersionNum()) {
        if (getVersionNum()
            != other.getVersionNum()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAppId();
      }
      if (hasSteamidLobby()) {
        hash = (37 * hash) + STEAMID_LOBBY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamidLobby());
      }
      if (hasClaimOwnership()) {
        hash = (37 * hash) + CLAIM_OWNERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClaimOwnership());
      }
      if (hasClaimMembership()) {
        hash = (37 * hash) + CLAIM_MEMBERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClaimMembership());
      }
      if (hasVersionNum()) {
        hash = (37 * hash) + VERSION_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getVersionNum();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LobbyMatchmakingLegacy_GetLobbyStatus_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LobbyMatchmakingLegacy_GetLobbyStatus_Request)
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request.class, SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request.Builder.class);
      }

      // Construct using SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        appId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        steamidLobby_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        claimOwnership_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        claimMembership_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        versionNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
      }

      @java.lang.Override
      public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request getDefaultInstanceForType() {
        return SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request.getDefaultInstance();
      }

      @java.lang.Override
      public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request build() {
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request buildPartial() {
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request result = new SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appId_ = appId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.steamidLobby_ = steamidLobby_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.claimOwnership_ = claimOwnership_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.claimMembership_ = claimMembership_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.versionNum_ = versionNum_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request) {
          return mergeFrom((SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request other) {
        if (other == SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamidLobby()) {
          setSteamidLobby(other.getSteamidLobby());
        }
        if (other.hasClaimOwnership()) {
          setClaimOwnership(other.getClaimOwnership());
        }
        if (other.hasClaimMembership()) {
          setClaimMembership(other.getClaimMembership());
        }
        if (other.hasVersionNum()) {
          setVersionNum(other.getVersionNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int appId_ ;
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return Whether the appId field is set.
       */
      @java.lang.Override
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return The appId.
       */
      @java.lang.Override
      public int getAppId() {
        return appId_;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @param value The appId to set.
       * @return This builder for chaining.
       */
      public Builder setAppId(int value) {
        bitField0_ |= 0x00000001;
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appId_ = 0;
        onChanged();
        return this;
      }

      private long steamidLobby_ ;
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return Whether the steamidLobby field is set.
       */
      @java.lang.Override
      public boolean hasSteamidLobby() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return The steamidLobby.
       */
      @java.lang.Override
      public long getSteamidLobby() {
        return steamidLobby_;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @param value The steamidLobby to set.
       * @return This builder for chaining.
       */
      public Builder setSteamidLobby(long value) {
        bitField0_ |= 0x00000002;
        steamidLobby_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamidLobby() {
        bitField0_ = (bitField0_ & ~0x00000002);
        steamidLobby_ = 0L;
        onChanged();
        return this;
      }

      private boolean claimOwnership_ ;
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @return Whether the claimOwnership field is set.
       */
      @java.lang.Override
      public boolean hasClaimOwnership() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @return The claimOwnership.
       */
      @java.lang.Override
      public boolean getClaimOwnership() {
        return claimOwnership_;
      }
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @param value The claimOwnership to set.
       * @return This builder for chaining.
       */
      public Builder setClaimOwnership(boolean value) {
        bitField0_ |= 0x00000004;
        claimOwnership_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearClaimOwnership() {
        bitField0_ = (bitField0_ & ~0x00000004);
        claimOwnership_ = false;
        onChanged();
        return this;
      }

      private boolean claimMembership_ ;
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @return Whether the claimMembership field is set.
       */
      @java.lang.Override
      public boolean hasClaimMembership() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @return The claimMembership.
       */
      @java.lang.Override
      public boolean getClaimMembership() {
        return claimMembership_;
      }
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @param value The claimMembership to set.
       * @return This builder for chaining.
       */
      public Builder setClaimMembership(boolean value) {
        bitField0_ |= 0x00000008;
        claimMembership_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearClaimMembership() {
        bitField0_ = (bitField0_ & ~0x00000008);
        claimMembership_ = false;
        onChanged();
        return this;
      }

      private int versionNum_ ;
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @return Whether the versionNum field is set.
       */
      @java.lang.Override
      public boolean hasVersionNum() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @return The versionNum.
       */
      @java.lang.Override
      public int getVersionNum() {
        return versionNum_;
      }
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @param value The versionNum to set.
       * @return This builder for chaining.
       */
      public Builder setVersionNum(int value) {
        bitField0_ |= 0x00000010;
        versionNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        versionNum_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LobbyMatchmakingLegacy_GetLobbyStatus_Request)
    }

    // @@protoc_insertion_point(class_scope:LobbyMatchmakingLegacy_GetLobbyStatus_Request)
    private static final SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request();
    }

    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Request>
        PARSER = new com.google.protobuf.AbstractParser<LobbyMatchmakingLegacy_GetLobbyStatus_Request>() {
      @java.lang.Override
      public LobbyMatchmakingLegacy_GetLobbyStatus_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LobbyMatchmakingLegacy_GetLobbyStatus_Request(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LobbyMatchmakingLegacy_GetLobbyStatus_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LobbyMatchmakingLegacy_GetLobbyStatus_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    boolean hasAppId();
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    int getAppId();

    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    boolean hasSteamidLobby();
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    long getSteamidLobby();

    /**
     * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return Whether the lobbyStatus field is set.
     */
    boolean hasLobbyStatus();
    /**
     * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return The lobbyStatus.
     */
    SteammessagesLobbymatchmakingSteamclient.ELobbyStatus getLobbyStatus();
  }
  /**
   * Protobuf type {@code LobbyMatchmakingLegacy_GetLobbyStatus_Response}
   */
  public static final class LobbyMatchmakingLegacy_GetLobbyStatus_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:LobbyMatchmakingLegacy_GetLobbyStatus_Response)
      LobbyMatchmakingLegacy_GetLobbyStatus_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LobbyMatchmakingLegacy_GetLobbyStatus_Response.newBuilder() to construct.
    private LobbyMatchmakingLegacy_GetLobbyStatus_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LobbyMatchmakingLegacy_GetLobbyStatus_Response() {
      lobbyStatus_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LobbyMatchmakingLegacy_GetLobbyStatus_Response();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LobbyMatchmakingLegacy_GetLobbyStatus_Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              appId_ = input.readUInt32();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              steamidLobby_ = input.readFixed64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              SteammessagesLobbymatchmakingSteamclient.ELobbyStatus value = SteammessagesLobbymatchmakingSteamclient.ELobbyStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                lobbyStatus_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response.class, SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response.Builder.class);
    }

    private int bitField0_;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private int appId_;
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    @java.lang.Override
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    @java.lang.Override
    public int getAppId() {
      return appId_;
    }

    public static final int STEAMID_LOBBY_FIELD_NUMBER = 2;
    private long steamidLobby_;
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    @java.lang.Override
    public boolean hasSteamidLobby() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    @java.lang.Override
    public long getSteamidLobby() {
      return steamidLobby_;
    }

    public static final int LOBBY_STATUS_FIELD_NUMBER = 3;
    private int lobbyStatus_;
    /**
     * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return Whether the lobbyStatus field is set.
     */
    @java.lang.Override public boolean hasLobbyStatus() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return The lobbyStatus.
     */
    @java.lang.Override public SteammessagesLobbymatchmakingSteamclient.ELobbyStatus getLobbyStatus() {
      @SuppressWarnings("deprecation")
      SteammessagesLobbymatchmakingSteamclient.ELobbyStatus result = SteammessagesLobbymatchmakingSteamclient.ELobbyStatus.valueOf(lobbyStatus_);
      return result == null ? SteammessagesLobbymatchmakingSteamclient.ELobbyStatus.k_ELobbyStatusInvalid : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, lobbyStatus_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, lobbyStatus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response)) {
        return super.equals(obj);
      }
      SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response other = (SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response) obj;

      if (hasAppId() != other.hasAppId()) return false;
      if (hasAppId()) {
        if (getAppId()
            != other.getAppId()) return false;
      }
      if (hasSteamidLobby() != other.hasSteamidLobby()) return false;
      if (hasSteamidLobby()) {
        if (getSteamidLobby()
            != other.getSteamidLobby()) return false;
      }
      if (hasLobbyStatus() != other.hasLobbyStatus()) return false;
      if (hasLobbyStatus()) {
        if (lobbyStatus_ != other.lobbyStatus_) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAppId();
      }
      if (hasSteamidLobby()) {
        hash = (37 * hash) + STEAMID_LOBBY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamidLobby());
      }
      if (hasLobbyStatus()) {
        hash = (37 * hash) + LOBBY_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + lobbyStatus_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LobbyMatchmakingLegacy_GetLobbyStatus_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LobbyMatchmakingLegacy_GetLobbyStatus_Response)
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response.class, SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response.Builder.class);
      }

      // Construct using SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        appId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        steamidLobby_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        lobbyStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesLobbymatchmakingSteamclient.internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
      }

      @java.lang.Override
      public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response getDefaultInstanceForType() {
        return SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response.getDefaultInstance();
      }

      @java.lang.Override
      public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response build() {
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response buildPartial() {
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response result = new SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appId_ = appId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.steamidLobby_ = steamidLobby_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lobbyStatus_ = lobbyStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response) {
          return mergeFrom((SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response other) {
        if (other == SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamidLobby()) {
          setSteamidLobby(other.getSteamidLobby());
        }
        if (other.hasLobbyStatus()) {
          setLobbyStatus(other.getLobbyStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int appId_ ;
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return Whether the appId field is set.
       */
      @java.lang.Override
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return The appId.
       */
      @java.lang.Override
      public int getAppId() {
        return appId_;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @param value The appId to set.
       * @return This builder for chaining.
       */
      public Builder setAppId(int value) {
        bitField0_ |= 0x00000001;
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appId_ = 0;
        onChanged();
        return this;
      }

      private long steamidLobby_ ;
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return Whether the steamidLobby field is set.
       */
      @java.lang.Override
      public boolean hasSteamidLobby() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return The steamidLobby.
       */
      @java.lang.Override
      public long getSteamidLobby() {
        return steamidLobby_;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @param value The steamidLobby to set.
       * @return This builder for chaining.
       */
      public Builder setSteamidLobby(long value) {
        bitField0_ |= 0x00000002;
        steamidLobby_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamidLobby() {
        bitField0_ = (bitField0_ & ~0x00000002);
        steamidLobby_ = 0L;
        onChanged();
        return this;
      }

      private int lobbyStatus_ = 0;
      /**
       * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @return Whether the lobbyStatus field is set.
       */
      @java.lang.Override public boolean hasLobbyStatus() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @return The lobbyStatus.
       */
      @java.lang.Override
      public SteammessagesLobbymatchmakingSteamclient.ELobbyStatus getLobbyStatus() {
        @SuppressWarnings("deprecation")
        SteammessagesLobbymatchmakingSteamclient.ELobbyStatus result = SteammessagesLobbymatchmakingSteamclient.ELobbyStatus.valueOf(lobbyStatus_);
        return result == null ? SteammessagesLobbymatchmakingSteamclient.ELobbyStatus.k_ELobbyStatusInvalid : result;
      }
      /**
       * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @param value The lobbyStatus to set.
       * @return This builder for chaining.
       */
      public Builder setLobbyStatus(SteammessagesLobbymatchmakingSteamclient.ELobbyStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        lobbyStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @return This builder for chaining.
       */
      public Builder clearLobbyStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lobbyStatus_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:LobbyMatchmakingLegacy_GetLobbyStatus_Response)
    }

    // @@protoc_insertion_point(class_scope:LobbyMatchmakingLegacy_GetLobbyStatus_Response)
    private static final SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response();
    }

    public static SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Response>
        PARSER = new com.google.protobuf.AbstractParser<LobbyMatchmakingLegacy_GetLobbyStatus_Response>() {
      @java.lang.Override
      public LobbyMatchmakingLegacy_GetLobbyStatus_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LobbyMatchmakingLegacy_GetLobbyStatus_Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SteammessagesLobbymatchmakingSteamclient.LobbyMatchmakingLegacy_GetLobbyStatus_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6steam/steammessages_lobbymatchmaking.s" +
      "teamclient.proto\032\036steam/steammessages_ba" +
      "se.proto\0322steam/steammessages_unified_ba" +
      "se.steamclient.proto\"\236\001\n-LobbyMatchmakin" +
      "gLegacy_GetLobbyStatus_Request\022\016\n\006app_id" +
      "\030\001 \001(\r\022\025\n\rsteamid_lobby\030\002 \001(\006\022\027\n\017claim_o" +
      "wnership\030\003 \001(\010\022\030\n\020claim_membership\030\004 \001(\010" +
      "\022\023\n\013version_num\030\005 \001(\r\"\223\001\n.LobbyMatchmaki" +
      "ngLegacy_GetLobbyStatus_Response\022\016\n\006app_" +
      "id\030\001 \001(\r\022\025\n\rsteamid_lobby\030\002 \001(\006\022:\n\014lobby" +
      "_status\030\003 \001(\0162\r.ELobbyStatus:\025k_ELobbySt" +
      "atusInvalid*\201\001\n\014ELobbyStatus\022\031\n\025k_ELobby" +
      "StatusInvalid\020\000\022\030\n\024k_ELobbyStatusExists\020" +
      "\001\022\036\n\032k_ELobbyStatusDoesNotExist\020\002\022\034\n\030k_E" +
      "LobbyStatusNotAMember\020\0032\306\001\n\026LobbyMatchma" +
      "kingLegacy\022\205\001\n\016GetLobbyStatus\022..LobbyMat" +
      "chmakingLegacy_GetLobbyStatus_Request\032/." +
      "LobbyMatchmakingLegacy_GetLobbyStatus_Re" +
      "sponse\"\022\202\265\030\016GetLobbyStatus\032$\202\265\030 Lobby ma" +
      "tchmaking legacy serviceB\003\200\001\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesBase.getDescriptor(),
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        });
    internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor,
        new java.lang.String[] { "AppId", "SteamidLobby", "ClaimOwnership", "ClaimMembership", "VersionNum", });
    internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor,
        new java.lang.String[] { "AppId", "SteamidLobby", "LobbyStatus", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(SteammessagesUnifiedBaseSteamclient.methodDescription);
    registry.add(SteammessagesUnifiedBaseSteamclient.serviceDescription);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    SteammessagesBase.getDescriptor();
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

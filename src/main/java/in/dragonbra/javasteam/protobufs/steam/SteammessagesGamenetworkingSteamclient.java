package in.dragonbra.javasteam.protobufs.steam;


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steam/steammessages_gamenetworking.steamclient.proto

// Protobuf Java Version: 3.25.2
public final class SteammessagesGamenetworkingSteamclient {
  private SteammessagesGamenetworkingSteamclient() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CGameNetworking_AllocateFakeIP_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameNetworking_AllocateFakeIP_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    boolean hasAppId();
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    int getAppId();

    /**
     * <code>optional uint32 num_fake_ports = 2;</code>
     * @return Whether the numFakePorts field is set.
     */
    boolean hasNumFakePorts();
    /**
     * <code>optional uint32 num_fake_ports = 2;</code>
     * @return The numFakePorts.
     */
    int getNumFakePorts();
  }
  /**
   * Protobuf type {@code CGameNetworking_AllocateFakeIP_Request}
   */
  public static final class CGameNetworking_AllocateFakeIP_Request extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CGameNetworking_AllocateFakeIP_Request)
      CGameNetworking_AllocateFakeIP_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CGameNetworking_AllocateFakeIP_Request.newBuilder() to construct.
    private CGameNetworking_AllocateFakeIP_Request(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CGameNetworking_AllocateFakeIP_Request() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CGameNetworking_AllocateFakeIP_Request();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request.class, SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request.Builder.class);
    }

    private int bitField0_;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private int appId_ = 0;
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    @java.lang.Override
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    @java.lang.Override
    public int getAppId() {
      return appId_;
    }

    public static final int NUM_FAKE_PORTS_FIELD_NUMBER = 2;
    private int numFakePorts_ = 0;
    /**
     * <code>optional uint32 num_fake_ports = 2;</code>
     * @return Whether the numFakePorts field is set.
     */
    @java.lang.Override
    public boolean hasNumFakePorts() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 num_fake_ports = 2;</code>
     * @return The numFakePorts.
     */
    @java.lang.Override
    public int getNumFakePorts() {
      return numFakePorts_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, numFakePorts_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, numFakePorts_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request)) {
        return super.equals(obj);
      }
      SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request other = (SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request) obj;

      if (hasAppId() != other.hasAppId()) return false;
      if (hasAppId()) {
        if (getAppId()
            != other.getAppId()) return false;
      }
      if (hasNumFakePorts() != other.hasNumFakePorts()) return false;
      if (hasNumFakePorts()) {
        if (getNumFakePorts()
            != other.getNumFakePorts()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAppId();
      }
      if (hasNumFakePorts()) {
        hash = (37 * hash) + NUM_FAKE_PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getNumFakePorts();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameNetworking_AllocateFakeIP_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameNetworking_AllocateFakeIP_Request)
        SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request.class, SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request.Builder.class);
      }

      // Construct using SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        appId_ = 0;
        numFakePorts_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Request_descriptor;
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request getDefaultInstanceForType() {
        return SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request.getDefaultInstance();
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request build() {
        SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request buildPartial() {
        SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request result = new SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appId_ = appId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.numFakePorts_ = numFakePorts_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request) {
          return mergeFrom((SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request other) {
        if (other == SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasNumFakePorts()) {
          setNumFakePorts(other.getNumFakePorts());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                appId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                numFakePorts_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int appId_ ;
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return Whether the appId field is set.
       */
      @java.lang.Override
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return The appId.
       */
      @java.lang.Override
      public int getAppId() {
        return appId_;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @param value The appId to set.
       * @return This builder for chaining.
       */
      public Builder setAppId(int value) {

        appId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appId_ = 0;
        onChanged();
        return this;
      }

      private int numFakePorts_ ;
      /**
       * <code>optional uint32 num_fake_ports = 2;</code>
       * @return Whether the numFakePorts field is set.
       */
      @java.lang.Override
      public boolean hasNumFakePorts() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 num_fake_ports = 2;</code>
       * @return The numFakePorts.
       */
      @java.lang.Override
      public int getNumFakePorts() {
        return numFakePorts_;
      }
      /**
       * <code>optional uint32 num_fake_ports = 2;</code>
       * @param value The numFakePorts to set.
       * @return This builder for chaining.
       */
      public Builder setNumFakePorts(int value) {

        numFakePorts_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_fake_ports = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumFakePorts() {
        bitField0_ = (bitField0_ & ~0x00000002);
        numFakePorts_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CGameNetworking_AllocateFakeIP_Request)
    }

    // @@protoc_insertion_point(class_scope:CGameNetworking_AllocateFakeIP_Request)
    private static final SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request();
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CGameNetworking_AllocateFakeIP_Request>
        PARSER = new com.google.protobuf.AbstractParser<CGameNetworking_AllocateFakeIP_Request>() {
      @java.lang.Override
      public CGameNetworking_AllocateFakeIP_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CGameNetworking_AllocateFakeIP_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CGameNetworking_AllocateFakeIP_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CGameNetworking_AllocateFakeIP_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameNetworking_AllocateFakeIP_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed32 fake_ip = 1;</code>
     * @return Whether the fakeIp field is set.
     */
    boolean hasFakeIp();
    /**
     * <code>optional fixed32 fake_ip = 1;</code>
     * @return The fakeIp.
     */
    int getFakeIp();

    /**
     * <code>repeated uint32 fake_ports = 2;</code>
     * @return A list containing the fakePorts.
     */
    java.util.List<java.lang.Integer> getFakePortsList();
    /**
     * <code>repeated uint32 fake_ports = 2;</code>
     * @return The count of fakePorts.
     */
    int getFakePortsCount();
    /**
     * <code>repeated uint32 fake_ports = 2;</code>
     * @param index The index of the element to return.
     * @return The fakePorts at the given index.
     */
    int getFakePorts(int index);
  }
  /**
   * Protobuf type {@code CGameNetworking_AllocateFakeIP_Response}
   */
  public static final class CGameNetworking_AllocateFakeIP_Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CGameNetworking_AllocateFakeIP_Response)
      CGameNetworking_AllocateFakeIP_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CGameNetworking_AllocateFakeIP_Response.newBuilder() to construct.
    private CGameNetworking_AllocateFakeIP_Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CGameNetworking_AllocateFakeIP_Response() {
      fakePorts_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CGameNetworking_AllocateFakeIP_Response();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response.class, SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response.Builder.class);
    }

    private int bitField0_;
    public static final int FAKE_IP_FIELD_NUMBER = 1;
    private int fakeIp_ = 0;
    /**
     * <code>optional fixed32 fake_ip = 1;</code>
     * @return Whether the fakeIp field is set.
     */
    @java.lang.Override
    public boolean hasFakeIp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional fixed32 fake_ip = 1;</code>
     * @return The fakeIp.
     */
    @java.lang.Override
    public int getFakeIp() {
      return fakeIp_;
    }

    public static final int FAKE_PORTS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList fakePorts_ =
        emptyIntList();
    /**
     * <code>repeated uint32 fake_ports = 2;</code>
     * @return A list containing the fakePorts.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getFakePortsList() {
      return fakePorts_;
    }
    /**
     * <code>repeated uint32 fake_ports = 2;</code>
     * @return The count of fakePorts.
     */
    public int getFakePortsCount() {
      return fakePorts_.size();
    }
    /**
     * <code>repeated uint32 fake_ports = 2;</code>
     * @param index The index of the element to return.
     * @return The fakePorts at the given index.
     */
    public int getFakePorts(int index) {
      return fakePorts_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, fakeIp_);
      }
      for (int i = 0; i < fakePorts_.size(); i++) {
        output.writeUInt32(2, fakePorts_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, fakeIp_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fakePorts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(fakePorts_.getInt(i));
        }
        size += dataSize;
        size += 1 * getFakePortsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response)) {
        return super.equals(obj);
      }
      SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response other = (SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response) obj;

      if (hasFakeIp() != other.hasFakeIp()) return false;
      if (hasFakeIp()) {
        if (getFakeIp()
            != other.getFakeIp()) return false;
      }
      if (!getFakePortsList()
          .equals(other.getFakePortsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFakeIp()) {
        hash = (37 * hash) + FAKE_IP_FIELD_NUMBER;
        hash = (53 * hash) + getFakeIp();
      }
      if (getFakePortsCount() > 0) {
        hash = (37 * hash) + FAKE_PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getFakePortsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameNetworking_AllocateFakeIP_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameNetworking_AllocateFakeIP_Response)
        SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response.class, SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response.Builder.class);
      }

      // Construct using SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fakeIp_ = 0;
        fakePorts_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_AllocateFakeIP_Response_descriptor;
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response getDefaultInstanceForType() {
        return SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response.getDefaultInstance();
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response build() {
        SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response buildPartial() {
        SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response result = new SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fakeIp_ = fakeIp_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          fakePorts_.makeImmutable();
          result.fakePorts_ = fakePorts_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response) {
          return mergeFrom((SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response other) {
        if (other == SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response.getDefaultInstance()) return this;
        if (other.hasFakeIp()) {
          setFakeIp(other.getFakeIp());
        }
        if (!other.fakePorts_.isEmpty()) {
          if (fakePorts_.isEmpty()) {
            fakePorts_ = other.fakePorts_;
            fakePorts_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureFakePortsIsMutable();
            fakePorts_.addAll(other.fakePorts_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                fakeIp_ = input.readFixed32();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 16: {
                int v = input.readUInt32();
                ensureFakePortsIsMutable();
                fakePorts_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureFakePortsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  fakePorts_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fakeIp_ ;
      /**
       * <code>optional fixed32 fake_ip = 1;</code>
       * @return Whether the fakeIp field is set.
       */
      @java.lang.Override
      public boolean hasFakeIp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed32 fake_ip = 1;</code>
       * @return The fakeIp.
       */
      @java.lang.Override
      public int getFakeIp() {
        return fakeIp_;
      }
      /**
       * <code>optional fixed32 fake_ip = 1;</code>
       * @param value The fakeIp to set.
       * @return This builder for chaining.
       */
      public Builder setFakeIp(int value) {

        fakeIp_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 fake_ip = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFakeIp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fakeIp_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList fakePorts_ = emptyIntList();
      private void ensureFakePortsIsMutable() {
        if (!fakePorts_.isModifiable()) {
          fakePorts_ = makeMutableCopy(fakePorts_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated uint32 fake_ports = 2;</code>
       * @return A list containing the fakePorts.
       */
      public java.util.List<java.lang.Integer>
          getFakePortsList() {
        fakePorts_.makeImmutable();
        return fakePorts_;
      }
      /**
       * <code>repeated uint32 fake_ports = 2;</code>
       * @return The count of fakePorts.
       */
      public int getFakePortsCount() {
        return fakePorts_.size();
      }
      /**
       * <code>repeated uint32 fake_ports = 2;</code>
       * @param index The index of the element to return.
       * @return The fakePorts at the given index.
       */
      public int getFakePorts(int index) {
        return fakePorts_.getInt(index);
      }
      /**
       * <code>repeated uint32 fake_ports = 2;</code>
       * @param index The index to set the value at.
       * @param value The fakePorts to set.
       * @return This builder for chaining.
       */
      public Builder setFakePorts(
          int index, int value) {

        ensureFakePortsIsMutable();
        fakePorts_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 fake_ports = 2;</code>
       * @param value The fakePorts to add.
       * @return This builder for chaining.
       */
      public Builder addFakePorts(int value) {

        ensureFakePortsIsMutable();
        fakePorts_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 fake_ports = 2;</code>
       * @param values The fakePorts to add.
       * @return This builder for chaining.
       */
      public Builder addAllFakePorts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFakePortsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fakePorts_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 fake_ports = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFakePorts() {
        fakePorts_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CGameNetworking_AllocateFakeIP_Response)
    }

    // @@protoc_insertion_point(class_scope:CGameNetworking_AllocateFakeIP_Response)
    private static final SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response();
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CGameNetworking_AllocateFakeIP_Response>
        PARSER = new com.google.protobuf.AbstractParser<CGameNetworking_AllocateFakeIP_Response>() {
      @java.lang.Override
      public CGameNetworking_AllocateFakeIP_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CGameNetworking_AllocateFakeIP_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CGameNetworking_AllocateFakeIP_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SteammessagesGamenetworkingSteamclient.CGameNetworking_AllocateFakeIP_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CGameNetworking_ReleaseFakeIP_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CGameNetworking_ReleaseFakeIP_Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    boolean hasAppId();
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    int getAppId();

    /**
     * <code>optional fixed32 fake_ip = 2;</code>
     * @return Whether the fakeIp field is set.
     */
    boolean hasFakeIp();
    /**
     * <code>optional fixed32 fake_ip = 2;</code>
     * @return The fakeIp.
     */
    int getFakeIp();

    /**
     * <code>repeated uint32 fake_ports = 3;</code>
     * @return A list containing the fakePorts.
     */
    java.util.List<java.lang.Integer> getFakePortsList();
    /**
     * <code>repeated uint32 fake_ports = 3;</code>
     * @return The count of fakePorts.
     */
    int getFakePortsCount();
    /**
     * <code>repeated uint32 fake_ports = 3;</code>
     * @param index The index of the element to return.
     * @return The fakePorts at the given index.
     */
    int getFakePorts(int index);
  }
  /**
   * Protobuf type {@code CGameNetworking_ReleaseFakeIP_Notification}
   */
  public static final class CGameNetworking_ReleaseFakeIP_Notification extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CGameNetworking_ReleaseFakeIP_Notification)
      CGameNetworking_ReleaseFakeIP_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CGameNetworking_ReleaseFakeIP_Notification.newBuilder() to construct.
    private CGameNetworking_ReleaseFakeIP_Notification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CGameNetworking_ReleaseFakeIP_Notification() {
      fakePorts_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CGameNetworking_ReleaseFakeIP_Notification();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_ReleaseFakeIP_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_ReleaseFakeIP_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification.class, SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification.Builder.class);
    }

    private int bitField0_;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private int appId_ = 0;
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    @java.lang.Override
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    @java.lang.Override
    public int getAppId() {
      return appId_;
    }

    public static final int FAKE_IP_FIELD_NUMBER = 2;
    private int fakeIp_ = 0;
    /**
     * <code>optional fixed32 fake_ip = 2;</code>
     * @return Whether the fakeIp field is set.
     */
    @java.lang.Override
    public boolean hasFakeIp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed32 fake_ip = 2;</code>
     * @return The fakeIp.
     */
    @java.lang.Override
    public int getFakeIp() {
      return fakeIp_;
    }

    public static final int FAKE_PORTS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList fakePorts_ =
        emptyIntList();
    /**
     * <code>repeated uint32 fake_ports = 3;</code>
     * @return A list containing the fakePorts.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getFakePortsList() {
      return fakePorts_;
    }
    /**
     * <code>repeated uint32 fake_ports = 3;</code>
     * @return The count of fakePorts.
     */
    public int getFakePortsCount() {
      return fakePorts_.size();
    }
    /**
     * <code>repeated uint32 fake_ports = 3;</code>
     * @param index The index of the element to return.
     * @return The fakePorts at the given index.
     */
    public int getFakePorts(int index) {
      return fakePorts_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed32(2, fakeIp_);
      }
      for (int i = 0; i < fakePorts_.size(); i++) {
        output.writeUInt32(3, fakePorts_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, fakeIp_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fakePorts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(fakePorts_.getInt(i));
        }
        size += dataSize;
        size += 1 * getFakePortsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification)) {
        return super.equals(obj);
      }
      SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification other = (SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification) obj;

      if (hasAppId() != other.hasAppId()) return false;
      if (hasAppId()) {
        if (getAppId()
            != other.getAppId()) return false;
      }
      if (hasFakeIp() != other.hasFakeIp()) return false;
      if (hasFakeIp()) {
        if (getFakeIp()
            != other.getFakeIp()) return false;
      }
      if (!getFakePortsList()
          .equals(other.getFakePortsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAppId();
      }
      if (hasFakeIp()) {
        hash = (37 * hash) + FAKE_IP_FIELD_NUMBER;
        hash = (53 * hash) + getFakeIp();
      }
      if (getFakePortsCount() > 0) {
        hash = (37 * hash) + FAKE_PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getFakePortsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CGameNetworking_ReleaseFakeIP_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CGameNetworking_ReleaseFakeIP_Notification)
        SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_ReleaseFakeIP_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_ReleaseFakeIP_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification.class, SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification.Builder.class);
      }

      // Construct using SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        appId_ = 0;
        fakeIp_ = 0;
        fakePorts_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SteammessagesGamenetworkingSteamclient.internal_static_CGameNetworking_ReleaseFakeIP_Notification_descriptor;
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification getDefaultInstanceForType() {
        return SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification build() {
        SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification buildPartial() {
        SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification result = new SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appId_ = appId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fakeIp_ = fakeIp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          fakePorts_.makeImmutable();
          result.fakePorts_ = fakePorts_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification) {
          return mergeFrom((SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification other) {
        if (other == SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasFakeIp()) {
          setFakeIp(other.getFakeIp());
        }
        if (!other.fakePorts_.isEmpty()) {
          if (fakePorts_.isEmpty()) {
            fakePorts_ = other.fakePorts_;
            fakePorts_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureFakePortsIsMutable();
            fakePorts_.addAll(other.fakePorts_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                appId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 21: {
                fakeIp_ = input.readFixed32();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 24: {
                int v = input.readUInt32();
                ensureFakePortsIsMutable();
                fakePorts_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureFakePortsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  fakePorts_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int appId_ ;
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return Whether the appId field is set.
       */
      @java.lang.Override
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return The appId.
       */
      @java.lang.Override
      public int getAppId() {
        return appId_;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @param value The appId to set.
       * @return This builder for chaining.
       */
      public Builder setAppId(int value) {

        appId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appId_ = 0;
        onChanged();
        return this;
      }

      private int fakeIp_ ;
      /**
       * <code>optional fixed32 fake_ip = 2;</code>
       * @return Whether the fakeIp field is set.
       */
      @java.lang.Override
      public boolean hasFakeIp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed32 fake_ip = 2;</code>
       * @return The fakeIp.
       */
      @java.lang.Override
      public int getFakeIp() {
        return fakeIp_;
      }
      /**
       * <code>optional fixed32 fake_ip = 2;</code>
       * @param value The fakeIp to set.
       * @return This builder for chaining.
       */
      public Builder setFakeIp(int value) {

        fakeIp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 fake_ip = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFakeIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fakeIp_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList fakePorts_ = emptyIntList();
      private void ensureFakePortsIsMutable() {
        if (!fakePorts_.isModifiable()) {
          fakePorts_ = makeMutableCopy(fakePorts_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated uint32 fake_ports = 3;</code>
       * @return A list containing the fakePorts.
       */
      public java.util.List<java.lang.Integer>
          getFakePortsList() {
        fakePorts_.makeImmutable();
        return fakePorts_;
      }
      /**
       * <code>repeated uint32 fake_ports = 3;</code>
       * @return The count of fakePorts.
       */
      public int getFakePortsCount() {
        return fakePorts_.size();
      }
      /**
       * <code>repeated uint32 fake_ports = 3;</code>
       * @param index The index of the element to return.
       * @return The fakePorts at the given index.
       */
      public int getFakePorts(int index) {
        return fakePorts_.getInt(index);
      }
      /**
       * <code>repeated uint32 fake_ports = 3;</code>
       * @param index The index to set the value at.
       * @param value The fakePorts to set.
       * @return This builder for chaining.
       */
      public Builder setFakePorts(
          int index, int value) {

        ensureFakePortsIsMutable();
        fakePorts_.setInt(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 fake_ports = 3;</code>
       * @param value The fakePorts to add.
       * @return This builder for chaining.
       */
      public Builder addFakePorts(int value) {

        ensureFakePortsIsMutable();
        fakePorts_.addInt(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 fake_ports = 3;</code>
       * @param values The fakePorts to add.
       * @return This builder for chaining.
       */
      public Builder addAllFakePorts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFakePortsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fakePorts_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 fake_ports = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFakePorts() {
        fakePorts_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CGameNetworking_ReleaseFakeIP_Notification)
    }

    // @@protoc_insertion_point(class_scope:CGameNetworking_ReleaseFakeIP_Notification)
    private static final SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification();
    }

    public static SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CGameNetworking_ReleaseFakeIP_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CGameNetworking_ReleaseFakeIP_Notification>() {
      @java.lang.Override
      public CGameNetworking_ReleaseFakeIP_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CGameNetworking_ReleaseFakeIP_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CGameNetworking_ReleaseFakeIP_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public SteammessagesGamenetworkingSteamclient.CGameNetworking_ReleaseFakeIP_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameNetworking_AllocateFakeIP_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CGameNetworking_AllocateFakeIP_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameNetworking_AllocateFakeIP_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CGameNetworking_AllocateFakeIP_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CGameNetworking_ReleaseFakeIP_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CGameNetworking_ReleaseFakeIP_Notification_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4steam/steammessages_gamenetworking.ste" +
      "amclient.proto\032\036steam/steammessages_base" +
      ".proto\0322steam/steammessages_unified_base" +
      ".steamclient.proto\"P\n&CGameNetworking_Al" +
      "locateFakeIP_Request\022\016\n\006app_id\030\001 \001(\r\022\026\n\016" +
      "num_fake_ports\030\002 \001(\r\"N\n\'CGameNetworking_" +
      "AllocateFakeIP_Response\022\017\n\007fake_ip\030\001 \001(\007" +
      "\022\022\n\nfake_ports\030\002 \003(\r\"a\n*CGameNetworking_" +
      "ReleaseFakeIP_Notification\022\016\n\006app_id\030\001 \001" +
      "(\r\022\017\n\007fake_ip\030\002 \001(\007\022\022\n\nfake_ports\030\003 \003(\r2" +
      "\306\001\n\016GameNetworking\022c\n\016AllocateFakeIP\022\'.C" +
      "GameNetworking_AllocateFakeIP_Request\032(." +
      "CGameNetworking_AllocateFakeIP_Response\022" +
      "O\n\023NotifyReleaseFakeIP\022+.CGameNetworking" +
      "_ReleaseFakeIP_Notification\032\013.NoResponse" +
      "B\003\200\001\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SteammessagesBase.getDescriptor(),
          SteammessagesUnifiedBaseSteamclient.getDescriptor(),
        });
    internal_static_CGameNetworking_AllocateFakeIP_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CGameNetworking_AllocateFakeIP_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CGameNetworking_AllocateFakeIP_Request_descriptor,
        new java.lang.String[] { "AppId", "NumFakePorts", });
    internal_static_CGameNetworking_AllocateFakeIP_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CGameNetworking_AllocateFakeIP_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CGameNetworking_AllocateFakeIP_Response_descriptor,
        new java.lang.String[] { "FakeIp", "FakePorts", });
    internal_static_CGameNetworking_ReleaseFakeIP_Notification_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CGameNetworking_ReleaseFakeIP_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CGameNetworking_ReleaseFakeIP_Notification_descriptor,
        new java.lang.String[] { "AppId", "FakeIp", "FakePorts", });
    SteammessagesBase.getDescriptor();
    SteammessagesUnifiedBaseSteamclient.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
